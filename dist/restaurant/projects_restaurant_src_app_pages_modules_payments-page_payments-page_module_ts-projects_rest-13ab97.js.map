{"version":3,"file":"projects_restaurant_src_app_pages_modules_payments-page_payments-page_module_ts-projects_rest-13ab97.js","mappings":"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","sources":["./projects/restaurant/src/app/components/modules/payments/all-payments/all-payments.component.ts","./projects/restaurant/src/app/components/modules/payments/all-payments/all-payments.component.html","./projects/restaurant/src/app/components/modules/payments/dashboard/dashboard.component.ts","./projects/restaurant/src/app/components/modules/payments/dashboard/dashboard.component.html","./projects/restaurant/src/app/components/modules/payments/new-payment/new-payment.component.ts","./projects/restaurant/src/app/components/modules/payments/new-payment/new-payment.component.html","./projects/restaurant/src/app/components/modules/payments/payment-form/payment-form.component.ts","./projects/restaurant/src/app/components/modules/payments/payment-form/payment-form.component.html","./projects/restaurant/src/app/components/modules/payments/payments.module.ts","./projects/restaurant/src/app/components/modules/payments/settings/settings.component.ts","./projects/restaurant/src/app/components/modules/payments/settings/settings.component.html","./projects/restaurant/src/app/components/modules/payments/view-payment/view-payment.component.ts","./projects/restaurant/src/app/components/modules/payments/view-payment/view-payment.component.html","./projects/restaurant/src/app/guards/modules/payments/view-payment.guard.ts","./projects/restaurant/src/app/pages/modules/payments-page/payments-page-routing.module.ts","./projects/restaurant/src/app/pages/modules/payments-page/payments-page.component.ts","./projects/restaurant/src/app/pages/modules/payments-page/payments-page.component.html","./projects/restaurant/src/app/pages/modules/payments-page/payments-page.module.ts","./projects/restaurant/src/app/services/modules/orders-api/orders-api.service.ts","./projects/restaurant/src/app/services/printing/payments-print/payments-print.service.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\n\r\nimport { PaymentsApiService } from 'projects/restaurant/src/app/services/modules/payments-api/payments-api.service';\r\nimport { PaymentsPrintService } from 'projects/restaurant/src/app/services/printing/payments-print/payments-print.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-all-payments',\r\n  templateUrl: './all-payments.component.html',\r\n  styleUrls: ['./all-payments.component.scss']\r\n})\r\nexport class AllPaymentsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private paymentsApi: PaymentsApiService,\r\n    private paymentsPrint: PaymentsPrintService\r\n  ) { }\r\n\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n\r\n  navHeading: any[] = [\r\n    { text: \"All Payments\", url: \"/home/payments/all-payments\" },\r\n  ];\r\n\r\n  paymentsGridData: any[] = [];\r\n\r\n  isFetchingGridData: boolean =  false;\r\n  isDataAvailable: boolean =  true;\r\n\r\n  firstInResponse: any = [];\r\n  lastInResponse: any = [];\r\n  nextStartAfter: any = [];\r\n  prevStartAt: any = [];\r\n  pageNumber = 0;\r\n  disableNext: boolean = true;\r\n  disablePrev: boolean = true;\r\n\r\n  sortParams = {\r\n    field: \"created_at\",\r\n    direction: \"desc\"\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAccountPayment();\r\n  }\r\n\r\n  getAccountPayment(){\r\n    this.isFetchingGridData = true;\r\n\r\n    this.paymentsApi.getAccountPayment(this.sortParams, 20)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.paymentsGridData = res.docs;\r\n\r\n          this.isFetchingGridData = false;\r\n          this.prevStartAt = this.firstInResponse;\r\n          this.nextStartAfter = res.docs[res.docs.length - 1];\r\n          this.firstInResponse = res.docs[0];\r\n          this.pageNumber = 1;\r\n\r\n          if (!res.docs.length) this.isDataAvailable = false;\r\n          else this.isDataAvailable = true;\r\n\r\n          if (!res.docs.length || res.docs.length < 20){\r\n            this.disableNext = true;\r\n            this.disablePrev = true;\r\n          }\r\n          else{\r\n            this.disableNext = false;\r\n            this.disablePrev = true;\r\n          }\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isFetchingGridData = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  nextPage(e: any){\r\n    e.preventDefault();\r\n    this.isFetchingGridData = true;\r\n\r\n    this.paymentsApi.getAccountPaymentNext(this.sortParams, 20, this.nextStartAfter)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.paymentsGridData = res.docs;\r\n\r\n          this.isFetchingGridData = false;\r\n          this.prevStartAt = this.firstInResponse;\r\n          this.nextStartAfter = res.docs[res.docs.length - 1];\r\n          this.firstInResponse = res.docs[0];\r\n          this.pageNumber++;\r\n\r\n          if (res.docs.length < 20){\r\n            this.disableNext = true;\r\n            this.disablePrev = false;\r\n          }\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isFetchingGridData = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  previousPage(e: any){\r\n    e.preventDefault();\r\n    this.isFetchingGridData = true;\r\n\r\n    this.paymentsApi.getAccountPaymentPrev(this.sortParams, 20, this.prevStartAt)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.paymentsGridData = res.docs;\r\n\r\n          this.isFetchingGridData = false;\r\n          if (!res.docs.length) this.isDataAvailable = false;\r\n\r\n          this.prevStartAt = this.firstInResponse;\r\n          this.nextStartAfter = res.docs[res.docs.length - 1];\r\n          this.firstInResponse = res.docs[0];\r\n          this.pageNumber--;\r\n\r\n          if (this.pageNumber == 1){\r\n            this.disableNext = false;\r\n            this.disablePrev = true;\r\n          }\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isFetchingGridData = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  sortTable(field: any, direction: any){\r\n    this.sortParams.field = field;\r\n    this.sortParams.direction = direction;\r\n\r\n    this.getAccountPayment();\r\n  }\r\n\r\n  viewPayment(paymentId: any){\r\n    console.log(paymentId);\r\n\r\n    sessionStorage.setItem(\"restaurant_payment_id\", paymentId);\r\n    this.router.navigateByUrl(\"/home/payments/view-payment\");\r\n  }\r\n\r\n  onPrint(){\r\n    console.log(\"lets start printing...\");\r\n    this.paymentsPrint.printAllPayments();\r\n  }\r\n\r\n}\r\n","<app-module-topnav [headings]=\"navHeading\" [showPrint]=\"true\" (print)=\"onPrint()\"></app-module-topnav>\r\n\r\n<div class=\"container\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-10\">\r\n\r\n            <div class=\"row mb-3\">\r\n                <div class=\"col-md-12\">\r\n                    <button class=\"btn btn-secondary page-add-btn\" routerLink=\"/home/payments/new-payment\">New Payment</button>\r\n                    <button [disabled]=\"isFetchingGridData\" class=\"btn btn-light border float-end page-refresh-btn\" (click)=\"getAccountPayment()\">\r\n                        <i class=\"bi bi-arrow-clockwise\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <table class=\"table table-bordered table-sm w-100 page-table\">\r\n                <thead>\r\n                    <tr class=\"bg-light\">\r\n                        <th width=\"15%\">\r\n                            Payment ID\r\n                            <i *ngIf=\"sortParams.field != 'payment_code'\" class=\"bi bi-filter float-end list-pointer\" (click)=\"sortTable('payment_code', 'desc')\"></i>\r\n                            <i *ngIf=\"sortParams.field == 'payment_code' && sortParams.direction == 'desc'\" class=\"bi bi-sort-down float-end list-pointer\" (click)=\"sortTable('payment_code', 'asc')\"></i>\r\n                            <i *ngIf=\"sortParams.field == 'payment_code' && sortParams.direction == 'asc'\" class=\"bi bi-sort-up float-end list-pointer\" (click)=\"sortTable('payment_code', 'desc')\"></i>\r\n                        </th>\r\n                        <th width=\"20%\">\r\n                            Payment Date\r\n                            <i *ngIf=\"sortParams.field != 'payment_date'\" class=\"bi bi-filter float-end list-pointer\" (click)=\"sortTable('payment_date', 'desc')\"></i>\r\n                            <i *ngIf=\"sortParams.field == 'payment_date' && sortParams.direction == 'desc'\" class=\"bi bi-sort-down float-end list-pointer\" (click)=\"sortTable('payment_date', 'asc')\"></i>\r\n                            <i *ngIf=\"sortParams.field == 'payment_date' && sortParams.direction == 'asc'\" class=\"bi bi-sort-up float-end list-pointer\" (click)=\"sortTable('payment_date', 'desc')\"></i>\r\n                        </th>\r\n                        <th width=\"20%\">\r\n                            Amount Paid\r\n                            <i *ngIf=\"sortParams.field != 'amount_paid'\" class=\"bi bi-filter float-end list-pointer\" (click)=\"sortTable('amount_paid', 'desc')\"></i>\r\n                            <i *ngIf=\"sortParams.field == 'amount_paid' && sortParams.direction == 'desc'\" class=\"bi bi-sort-down float-end list-pointer\" (click)=\"sortTable('amount_paid', 'asc')\"></i>\r\n                            <i *ngIf=\"sortParams.field == 'amount_paid' && sortParams.direction == 'asc'\" class=\"bi bi-sort-up float-end list-pointer\" (click)=\"sortTable('amount_paid', 'desc')\"></i>\r\n                        </th>\r\n                        <th width=\"15%\">\r\n                            Order ID\r\n                            <i *ngIf=\"sortParams.field != 'order_code'\" class=\"bi bi-filter float-end list-pointer\" (click)=\"sortTable('order_code', 'desc')\"></i>\r\n                            <i *ngIf=\"sortParams.field == 'order_code' && sortParams.direction == 'desc'\" class=\"bi bi-sort-down float-end list-pointer\" (click)=\"sortTable('order_code', 'asc')\"></i>\r\n                            <i *ngIf=\"sortParams.field == 'order_code' && sortParams.direction == 'asc'\" class=\"bi bi-sort-up float-end list-pointer\" (click)=\"sortTable('order_code', 'desc')\"></i>\r\n                        </th>\r\n                        <th width=\"30%\">\r\n                            Customer Name\r\n                            <i *ngIf=\"sortParams.field != 'customer_name'\" class=\"bi bi-filter float-end list-pointer\" (click)=\"sortTable('customer_name', 'desc')\"></i>\r\n                            <i *ngIf=\"sortParams.field == 'customer_name' && sortParams.direction == 'desc'\" class=\"bi bi-sort-down float-end list-pointer\" (click)=\"sortTable('customer_name', 'asc')\"></i>\r\n                            <i *ngIf=\"sortParams.field == 'customer_name' && sortParams.direction == 'asc'\" class=\"bi bi-sort-up float-end list-pointer\" (click)=\"sortTable('customer_name', 'desc')\"></i>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let data of paymentsGridData\" (dblclick)=\"viewPayment(data.id)\" class=\"table-pointer\">\r\n                        <td>{{data?.data().payment_code}}</td>\r\n                        <td>{{data?.data().payment_date}}</td>\r\n                        <td>{{data?.data().amount_paid}}</td>\r\n                        <td>{{data?.data().order.data.order_code}}</td>\r\n                        <td>{{data?.data().order.data.customer.customer_name}}</td>\r\n                    </tr>\r\n                    <tr *ngIf=\"isFetchingGridData\" class=\"text-center\">\r\n                        <td colspan=\"5\">\r\n                            <div class=\"spinner-grow m-4\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr *ngIf=\"!isDataAvailable && !isFetchingGridData\" class=\"text-center\">\r\n                        <td colspan=\"5\">\r\n                            <p class=\"m-4\">No data available</p>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr class=\"bg-light\">\r\n                        <td colspan=\"5\">\r\n                            <nav class=\"nav-light float-end\" aria-label=\"Page navigation\">\r\n                                <ul class=\"pagination pagination-sm mb-0 justify-content-end\">\r\n                                    <li class=\"page-item\" [ngClass]=\"disablePrev ? 'disabled' : ''\">\r\n                                        <a class=\"page-link\" href=\"#\" aria-label=\"First\" (click)=\"previousPage($event)\">\r\n                                            <i class=\"bi bi-caret-left-fill\"></i>\r\n                                        </a>\r\n                                    </li>\r\n                                    <li class=\"page-item\">\r\n                                        <a class=\"page-link\" href=\"#\" aria-label=\"Current\" (click)=\"$event.preventDefault()\">\r\n                                            {{pageNumber}}\r\n                                        </a>\r\n                                    </li>\r\n                                    <li class=\"page-item\" [ngClass]=\"disableNext ? 'disabled' : ''\">\r\n                                        <a class=\"page-link\" href=\"#\" aria-label=\"Last\" (click)=\"nextPage($event)\">\r\n                                            <i class=\"bi bi-caret-right-fill\"></i>\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </nav>\r\n                        </td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- connection error prompt component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { ChartDataSets, ChartOptions } from 'chart.js';\r\nimport { Color, Label, SingleDataSet } from 'ng2-charts';\r\nimport moment from 'moment/moment';\r\n\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\n\r\nimport { PaymentsApiService } from 'projects/restaurant/src/app/services/modules/payments-api/payments-api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private paymentsApi: PaymentsApiService) { }\r\n\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n\r\n  navHeading: any[] = [\r\n    { text: \"Dashboard\", url: \"/home/payments/dashboard\" },\r\n  ];\r\n\r\n  weekPaymentsData: any;\r\n\r\n  weekPaymentsCount: number = 0;\r\n  weekPaymentsTotal: number = 0;\r\n\r\n  paymentsLineChartData: ChartDataSets[] = [{ data: [0], label: 'Menu Groups' }];\r\n  paymentsLineChartLabels: Label[] = [\"\"]\r\n\r\n  chartOptions = {};\r\n\r\n  today = moment();\r\n\r\n  ngOnInit(): void {\r\n    this.initChart();\r\n\r\n    this.getWeekPayment();\r\n  }\r\n\r\n  initChart(){\r\n    this.chartOptions = {\r\n      responsive: true,\r\n      scales: {\r\n        yAxes: [{\r\n          min: 0,\r\n          ticks: {\r\n            stepSize: 1,\r\n            beginAtZero: true,\r\n          }\r\n        }]\r\n      }\r\n    };\r\n  }\r\n\r\n  getWeekPayment(){\r\n    this.paymentsApi.getWeekPayment(moment(this.today).add(-1, 'months').toDate(), this.today.toDate())\r\n      .then(\r\n        res => {\r\n          console.log(res);\r\n          this.weekPaymentsData = res.docs;\r\n          this.weekPaymentsCount = res.docs.length;\r\n\r\n          this.setPaymentChartData();\r\n          this.calculateTotalPayments();\r\n        },\r\n        err => {\r\n          console.log(err);\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  setPaymentChartData(){\r\n    this.paymentsLineChartLabels = [];\r\n    for (let i = 7; i > 0; i--) {\r\n      var d = moment(this.today).add(-i, 'days');\r\n      this.paymentsLineChartLabels.push(d.toDate().toISOString().slice(0, 10));\r\n    }\r\n    console.log(this.paymentsLineChartLabels);\r\n\r\n    let dataCount: any[] = [];\r\n    for (let i = 7; i > 0; i--) {\r\n      dataCount.push(0);\r\n    }\r\n    console.log(dataCount);\r\n\r\n    this.weekPaymentsData.forEach((payment: any) => {\r\n      var paymentDate = payment.data().created_at.toDate().toISOString().slice(0, 10);\r\n      for (let i = 7; i > 0; i--){\r\n        if (this.paymentsLineChartLabels[i] == paymentDate){\r\n          dataCount[i]++;\r\n        }\r\n      }\r\n    })\r\n    console.log(dataCount);\r\n    this.paymentsLineChartData = [{ data: dataCount, label: 'Payments' }];\r\n  }\r\n\r\n  calculateTotalPayments(){\r\n    this.weekPaymentsTotal = 0;\r\n\r\n    this.weekPaymentsData.forEach((payment: any) => {\r\n      this.weekPaymentsTotal = payment.data().amount_paid;\r\n    })\r\n    console.log(this.weekPaymentsTotal);\r\n  }\r\n\r\n}\r\n","<app-module-topnav [headings]=\"navHeading\"></app-module-topnav>\r\n\r\n<div class=\"container\">\r\n\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col-md-3 mb-4\">\r\n            <div class=\"card border-left-secondary shadow h-100 py-2\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"row no-gutters align-items-center\">\r\n                        <div class=\"col mr-2\">\r\n                            <div class=\"text-xs font-weight-bold text-uppercase mb-1\">No. of Payments this Week</div>\r\n                            <div class=\"h5 mb-0 font-weight-bold text-gray-800\">{{weekPaymentsCount}}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 mb-4\">\r\n            <div class=\"card border-left-secondary shadow h-100 py-2\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"row no-gutters align-items-center\">\r\n                        <div class=\"col mr-2\">\r\n                            <div class=\"text-xs font-weight-bold text-uppercase mb-1\">Amount Paid this Week</div>\r\n                            <div class=\"h5 mb-0 font-weight-bold text-gray-800\">$ {{weekPaymentsTotal}}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col-md-8\">\r\n            <div class=\"card shadow mb-4\">\r\n                <div class=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                    <h6 class=\"m-0 font-weight-bold\">Total Payments by Day</h6>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"chart-area\">\r\n                        <canvas baseChart\r\n                            [datasets]=\"paymentsLineChartData\"\r\n                            [labels]=\"paymentsLineChartLabels\"\r\n                            [options]=\"chartOptions\"\r\n                            [legend]=\"true\"\r\n                            [chartType]=\"'line'\"\r\n                        ></canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- connection error toast component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { serverTimestamp } from 'firebase/firestore';\r\n\r\nimport { PaymentFormComponent } from '../payment-form/payment-form.component';\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\n\r\nimport { PaymentsApiService } from 'projects/restaurant/src/app/services/modules/payments-api/payments-api.service';\r\n\r\nimport { Payment } from 'projects/restaurant/src/app/models/modules/payments/payments.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-payment',\r\n  templateUrl: './new-payment.component.html',\r\n  styleUrls: ['./new-payment.component.scss']\r\n})\r\nexport class NewPaymentComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private paymentsApi: PaymentsApiService\r\n  ) { }\r\n\r\n  @ViewChild('paymentFormComponentReference', { read: PaymentFormComponent, static: false }) paymentForm!: PaymentFormComponent;\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n\r\n  navHeading: any[] = [\r\n    { text: \"New Payment\", url: \"/home/payments/new-payment\" },\r\n  ];\r\n\r\n  isPaymentSaving = false;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.paymentForm.paymentForm.controls.paymentDate.setValue(new Date().toISOString().slice(0, 16))\r\n  }\r\n\r\n  createPayment(){\r\n    console.log('u are saving a new payment');\r\n\r\n    var data: Payment = {\r\n      created_at: serverTimestamp(),\r\n      account: localStorage.getItem('restaurant_id') as string,\r\n      payment_code: this.paymentForm.paymentForm.controls.paymentCode.value,\r\n      payment_date: this.paymentForm.paymentForm.controls.paymentDate.value,\r\n      amount_paid: this.paymentForm.paymentForm.controls.amountPaid.value,\r\n      order: {\r\n        id: this.paymentForm.selectedOrderId,\r\n        data: this.paymentForm.selectedOrderData\r\n      }\r\n    }\r\n\r\n    console.log(data);\r\n    this.isPaymentSaving = true;\r\n\r\n    this.paymentsApi.createPayment(data)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.isPaymentSaving = false;\r\n\r\n          sessionStorage.setItem('restaurant_payment_id', res.id);\r\n          this.router.navigateByUrl('/home/payments/view-payment');\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isPaymentSaving = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n}\r\n","<app-module-topnav [headings]=\"navHeading\"></app-module-topnav>\r\n\r\n<div class=\"container\">\r\n\r\n    <!-- payment page form -->\r\n\r\n    <app-payment-form #paymentFormComponentReference></app-payment-form>\r\n\r\n    <div class=\"row page-form\">\r\n        <div class=\"col-md-6\">\r\n            <button type=\"button\" class=\"btn btn-secondary btn-sm float-end ms-1 page-form-btn\" routerLink=\"/home/payments/all-payments\">Cancel</button>\r\n            <button [disabled]=\"isPaymentSaving\" class=\"btn btn-secondary btn-sm float-end ms-1 page-form-btn\" (click)=\"createPayment()\">Save</button>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- connection error prompt component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { SelectOrderComponent } from '../../../select-windows/orders-windows/select-order/select-order.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-payment-form',\r\n  templateUrl: './payment-form.component.html',\r\n  styleUrls: ['./payment-form.component.scss']\r\n})\r\nexport class PaymentFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @ViewChild('selectOrderComponentReference', { read: SelectOrderComponent, static: false }) selectOrder!: SelectOrderComponent;\r\n\r\n  paymentForm: FormGroup = new FormGroup({});\r\n\r\n  selectedOrderId: any;\r\n  selectedOrderData: any;\r\n\r\n  ngOnInit(): void {\r\n    this.initPaymentForm();\r\n  }\r\n\r\n  initPaymentForm(){\r\n    this.paymentForm = new FormGroup({\r\n      paymentCode: new FormControl(''),\r\n      paymentDate: new FormControl(''),\r\n      orderCode: new FormControl({value: '', disabled: true}),\r\n      customerName: new FormControl({value: '', disabled: true}),\r\n      totalAmount: new FormControl({value: 0, disabled: true}),\r\n      amountPaid: new FormControl(''),\r\n      balance: new FormControl({value: '', disabled: true}),\r\n    })\r\n  }\r\n\r\n  onOrderSelected(orderData: any){\r\n    console.log(orderData);\r\n\r\n    this.selectedOrderId = orderData.id;\r\n    this.selectedOrderData = orderData.data();\r\n\r\n    this.paymentForm.controls.orderCode.setValue(orderData.data().order_code);\r\n    this.paymentForm.controls.customerName.setValue(orderData.data().customer.customer_name);\r\n    this.paymentForm.controls.totalAmount.setValue(orderData.data().total_amount);\r\n  }\r\n\r\n  openOrderWindow(){\r\n    console.log(\"You are opening select order window\")\r\n    this.selectOrder.openModal();\r\n  }\r\n\r\n  setBalance(){\r\n    this.paymentForm.controls.balance.setValue(\r\n      this.paymentForm.controls.totalAmount.value - this.paymentForm.controls.amountPaid.value\r\n    )\r\n  }\r\n\r\n}\r\n","<form class=\"page-form\" [formGroup]=\"paymentForm\">\r\n\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col-md-12\">\r\n            <h4>Payment Details</h4>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-end mt-1\">Payment ID :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <input formControlName=\"paymentCode\" class=\"form-control form-control-sm w-100\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-4\">\r\n                <div class=\"col-md-4\"><label class=\"float-end mt-1\">Payment Date :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <input type=\"datetime-local\" formControlName=\"paymentDate\" class=\"form-control form-control-sm w-100\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-end mt-1\">Order ID :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <div class=\"input-group input-group-sm w-100\">\r\n                        <input formControlName=\"orderCode\" class=\"form-control\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"openOrderWindow()\">\r\n                            <i class=\"bi bi-three-dots\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-end mt-1\">Customer Name :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <div class=\"input-group input-group-sm w-100\">\r\n                        <input formControlName=\"customerName\" class=\"form-control\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"openOrderWindow()\">\r\n                            <i class=\"bi bi-three-dots\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-4\">\r\n                <div class=\"col-md-4\"><label class=\"float-end mt-1\">Amount Due :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <input type=\"number\" min=\"0\" step=\".01\" formControlName=\"totalAmount\" class=\"form-control form-control-sm w-100\" (change)=\"setBalance()\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-end mt-1\">Amount Paid :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <input type=\"number\" min=\"0\" step=\".01\" formControlName=\"amountPaid\" class=\"form-control form-control-sm w-100\" (change)=\"setBalance()\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-end mt-1\">Balance :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <input type=\"number\" min=\"0\" step=\".01\" formControlName=\"balance\" class=\"form-control form-control-sm w-100\">\r\n                </div>\r\n            </div>\r\n\r\n            <hr />\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</form>\r\n\r\n<!-- select order window component reference -->\r\n\r\n<app-select-order #selectOrderComponentReference (rowSelected)=\"onOrderSelected($event)\"></app-select-order>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ChartsModule } from 'ng2-charts';\r\n\r\nimport { ModuleUtilitiesModule } from 'projects/personal/src/app/components/module-utilities/module-utilities.module';\r\nimport { OrdersWindowsModule } from '../../select-windows/orders-windows/orders-windows.module';\r\n\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { AllPaymentsComponent } from './all-payments/all-payments.component';\r\nimport { NewPaymentComponent } from './new-payment/new-payment.component';\r\nimport { ViewPaymentComponent } from './view-payment/view-payment.component';\r\nimport { PaymentFormComponent } from './payment-form/payment-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    SettingsComponent,\r\n    AllPaymentsComponent,\r\n    NewPaymentComponent,\r\n    ViewPaymentComponent,\r\n    PaymentFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ChartsModule,\r\n    ModuleUtilitiesModule,\r\n    OrdersWindowsModule,\r\n  ]\r\n})\r\nexport class PaymentsModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>settings works!</p>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { PaymentFormComponent } from '../payment-form/payment-form.component';\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\nimport { DeleteModalComponent } from 'projects/personal/src/app/components/module-utilities/delete-modal/delete-modal.component'\r\n\r\nimport { PaymentsApiService } from 'projects/restaurant/src/app/services/modules/payments-api/payments-api.service';\r\nimport { PaymentsPrintService } from 'projects/restaurant/src/app/services/printing/payments-print/payments-print.service';\r\n\r\nimport { Payment } from 'projects/restaurant/src/app/models/modules/payments/payments.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-payment',\r\n  templateUrl: './view-payment.component.html',\r\n  styleUrls: ['./view-payment.component.scss']\r\n})\r\nexport class ViewPaymentComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private paymentsApi: PaymentsApiService,\r\n    private paymentsPrint: PaymentsPrintService,\r\n  ) { }\r\n\r\n  @ViewChild('paymentFormComponentReference', { read: PaymentFormComponent, static: false }) paymentForm!: PaymentFormComponent;\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n  @ViewChild('deleteModalComponentReference', { read: DeleteModalComponent, static: false }) deleteModal!: DeleteModalComponent;\r\n\r\n  navHeading: any[] = [\r\n    { text: \"View Payment\", url: \"/home/payments/view-payment\" },\r\n  ];\r\n\r\n  paymentData: any;\r\n\r\n  isPaymentLoading = false;\r\n  isPaymentSaving = false;\r\n  isPaymentDeleting = false;\r\n\r\n  ngOnInit(): void {\r\n    this.getPayment();\r\n  }\r\n\r\n  getPayment(){\r\n    this.isPaymentLoading = true;\r\n\r\n    this.paymentsApi.getPayment()\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res.data());\r\n\r\n          this.paymentData = res;\r\n          this.isPaymentLoading = false;\r\n\r\n          this.paymentForm.paymentForm.controls.paymentCode.setValue(res.data().payment_code);\r\n          this.paymentForm.paymentForm.controls.paymentDate.setValue(res.data().payment_date);\r\n          this.paymentForm.paymentForm.controls.amountPaid.setValue(res.data().amount_paid);\r\n\r\n          this.paymentForm.paymentForm.controls.selectedCustomerId = res.data().order.data.customer.id;\r\n          this.paymentForm.paymentForm.controls.orderCode.setValue(res.data().order.data.order_code);\r\n          this.paymentForm.paymentForm.controls.customerName.setValue(res.data().order.data.customer_name);\r\n          this.paymentForm.paymentForm.controls.totalAmount.setValue(res.data().order.data.total_amount);\r\n\r\n          this.paymentForm.selectedOrderId = res.data().order.id;\r\n          this.paymentForm.selectedOrderData = res.data().order.data;\r\n          this.paymentForm.setBalance()\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isPaymentLoading = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  updatePayment(){\r\n    console.log('u are saving a new payment');\r\n\r\n    var data = {\r\n      payment_code: this.paymentForm.paymentForm.controls.paymentCode.value,\r\n      payment_date: this.paymentForm.paymentForm.controls.paymentDate.value,\r\n      amount_paid: this.paymentForm.paymentForm.controls.amountPaid.value,\r\n      order: {\r\n        id: this.paymentForm.selectedOrderId,\r\n        data: this.paymentForm.selectedOrderData,\r\n      }\r\n    }\r\n\r\n    console.log(data);\r\n    this.isPaymentSaving = true;\r\n\r\n    this.paymentsApi.updatePayment(data)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.isPaymentSaving = false;\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isPaymentSaving = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  confirmDelete(){\r\n    this.deleteModal.openModal();\r\n  }\r\n\r\n  deletePayment(){\r\n    this.isPaymentDeleting = true;\r\n\r\n    this.paymentsApi.deletePayment()\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n\r\n          this.router.navigateByUrl('/home/payments/all-payments');\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  onPrint(){\r\n    console.log(\"lets start printing...\");\r\n    this.paymentsPrint.printViewPayment();\r\n  }\r\n\r\n  onPrintRoll(){\r\n    console.log(\"lets start printing roll...\");\r\n    this.paymentsPrint.printPaymentRoll();\r\n  }\r\n\r\n}\r\n","<app-module-topnav [headings]=\"navHeading\" [showPrint]=\"true\" (print)=\"onPrint()\"></app-module-topnav>\r\n\r\n<div class=\"container\">\r\n\r\n    <!-- payment page form -->\r\n\r\n    <app-payment-form #paymentFormComponentReference></app-payment-form>\r\n\r\n    <div *ngIf=\"!isPaymentLoading\" class=\"row page-form\">\r\n        <div class=\"col-md-6\">\r\n            <button type=\"button\" class=\"btn btn-secondary btn-sm page-form-btn\" (click)=\"onPrintRoll()\"><i class=\"bi bi-receipt me-2\"></i>Print</button>\r\n\r\n            <button type=\"button\" class=\"btn btn-secondary btn-sm float-end ms-1 page-form-btn\" routerLink=\"/home/payments/all-payments\">Cancel</button>\r\n            <button [disabled]=\"isPaymentDeleting\" type=\"button\" class=\"btn btn-secondary btn-sm float-end ms-1 page-form-btn\" (click)=\"confirmDelete()\">Delete</button>\r\n            <button [disabled]=\"isPaymentSaving\" class=\"btn btn-secondary btn-sm float-end ms-1 page-form-btn\" (click)=\"updatePayment()\">Save</button>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"isPaymentLoading\" class=\"row page-form\">\r\n        <div class=\"col-md-6\">\r\n            <button type=\"button\" class=\"btn btn-sm float-end ms-1 btn-light page-form-btn\">\r\n                <div class=\"spinner-grow spinner-grow-sm\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- connection error prompt component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n\r\n<app-delete-modal #deleteModalComponentReference (confirmEvent)=\"deletePayment()\"></app-delete-modal>\r\n\r\n<!-- select customer window component -->\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewPaymentGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n    if (!!sessionStorage.getItem('restaurant_payment_id')){\n      return true;\n    }\n    else{\n      this.router.navigateByUrl('/home/payments');\n      return false;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { PaymentsPageComponent } from './payments-page.component';\r\nimport { DashboardComponent } from '../../../components/modules/payments/dashboard/dashboard.component';\r\nimport { AllPaymentsComponent } from '../../../components/modules/payments/all-payments/all-payments.component';\r\nimport { NewPaymentComponent } from '../../../components/modules/payments/new-payment/new-payment.component';\r\nimport { ViewPaymentComponent } from '../../../components/modules/payments/view-payment/view-payment.component';\r\n\r\nimport { ViewPaymentGuard } from '../../../guards/modules/payments/view-payment.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: PaymentsPageComponent,\r\n    children: [\r\n      { path: \"\", component: DashboardComponent },\r\n      { path: \"dashboard\", component: DashboardComponent },\r\n      { path: \"all-payments\", component: AllPaymentsComponent },\r\n      { path: \"new-payment\", component: NewPaymentComponent },\r\n      { path: \"view-payment\", component: ViewPaymentComponent, canActivate: [ViewPaymentGuard] }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaymentsPageRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-payments-page',\r\n  templateUrl: './payments-page.component.html',\r\n  styleUrls: ['./payments-page.component.scss']\r\n})\r\nexport class PaymentsPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  navLinks: any[] = [\r\n    { text: \"All Payments\", url: \"/home/payments/all-payments\", icon: \"bi bi-list-ul\" },\r\n    { text: \"New Payment\", url: \"/home/payments/new-payment\", icon: \"bi bi-plus-square\" },\r\n  ]\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-main-navbar [navBrand]=\"'nR Restaurant'\" [source]=\"'Restaurant'\"></app-main-navbar>\r\n\r\n<div id=\"wrapper\">\r\n\r\n    <app-module-sidenav [navLinks]=\"navLinks\" [heading]=\"'Payments'\"></app-module-sidenav>\r\n\r\n    <div id=\"content-wrapper\" class=\"d-flex flex-column\">\r\n        <div id=\"content\">\r\n\r\n            <router-outlet></router-outlet>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PaymentsPageRoutingModule } from './payments-page-routing.module';\r\nimport { MainNavbarModule } from 'projects/application/src/app/components/main-navbar/main-navbar.module';\r\nimport { ModuleUtilitiesModule } from 'projects/personal/src/app/components/module-utilities/module-utilities.module';\r\nimport { PaymentsModule } from '../../../components/modules/payments/payments.module';\r\n\r\nimport { PaymentsPageComponent } from './payments-page.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PaymentsPageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PaymentsPageRoutingModule,\r\n    MainNavbarModule,\r\n    ModuleUtilitiesModule,\r\n    PaymentsModule,\r\n  ]\r\n})\r\nexport class PaymentsPageModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersApiService {\r\n\r\n  constructor(\r\n    private afs: AngularFirestore,\r\n  ) { }\r\n\r\n  orderRef = this.afs.collection('restaurant/module_orders/restaurant_order');\r\n  orderItemRef = this.afs.collection('restaurant/module_orders/restaurant_order_item');\r\n\r\n  // orders\r\n\r\n  createOrder(order: any){\r\n    return this.orderRef.add(order);\r\n  }\r\n\r\n  getOrder(){\r\n    return this.orderRef.doc(String(sessionStorage.getItem('restaurant_order_id'))).ref.get();\r\n  }\r\n\r\n  updateOrder(order: any){\r\n    return this.orderRef.doc(String(sessionStorage.getItem('restaurant_order_id'))).update(order);\r\n  }\r\n\r\n  deleteOrder(){\r\n    return this.orderRef.doc(String(sessionStorage.getItem('restaurant_order_id'))).delete();\r\n  }\r\n\r\n  getAccountOrder(sorting: any, pageSize: any){\r\n    return this.orderRef.ref\r\n      .where(\"account\", \"==\", localStorage.getItem('restaurant_id'))\r\n      .orderBy(sorting?.field, sorting?.direction)\r\n      .limit(pageSize)\r\n      .get();\r\n  }\r\n\r\n  getAccountOrderNext(sorting: any, pageSize: any, pageStart: any){\r\n    return this.orderRef.ref\r\n      .where(\"account\", \"==\", localStorage.getItem('restaurant_id'))\r\n      .orderBy(sorting?.field, sorting?.direction)\r\n      .startAfter(pageStart)\r\n      .limit(pageSize)\r\n      .get();\r\n  }\r\n\r\n  getAccountOrderPrev(sorting: any, pageSize: any, pageStart: any){\r\n    return this.orderRef.ref\r\n      .where(\"account\", \"==\", localStorage.getItem('restaurant_id'))\r\n      .orderBy(sorting?.field, sorting?.direction)\r\n      .startAt(pageStart)\r\n      .limit(pageSize)\r\n      .get();\r\n  }\r\n\r\n  getAllAccountOrder(){\r\n    return this.orderRef.ref\r\n      .where(\"account\", \"==\", localStorage.getItem('restaurant_id'))\r\n      .orderBy(\"created_at\", \"desc\")\r\n      .get();\r\n  }\r\n\r\n  // order items\r\n\r\n  createOrderItem(orderItem: any){\r\n    return this.orderItemRef.add(orderItem);\r\n  }\r\n\r\n  getOrderItem(orderItemData: any){\r\n    return this.orderItemRef.doc(orderItemData).ref.get();\r\n  }\r\n\r\n  updateOrderItem(orderItemId: any, orderItemData: any){\r\n    return this.orderItemRef.doc(orderItemId).update(orderItemData);\r\n  }\r\n\r\n  deleteOrderItem(orderItemId: any){\r\n    return this.orderItemRef.doc(orderItemId).delete();\r\n  }\r\n\r\n  getOrderOrderItem(){\r\n    return this.orderItemRef.ref\r\n      .where(\"order\", \"==\", sessionStorage.getItem('restaurant_order_id'))\r\n      .orderBy(\"created_at\", \"asc\")\r\n      .get();\r\n  }\r\n\r\n  // dashboard\r\n\r\n  getWeekOrder(startDate: any, endDate: any){\r\n    return this.orderRef.ref\r\n      .where(\"account\", \"==\", localStorage.getItem('restaurant_id'))\r\n      .where(\"created_at\", \"<\", startDate).where(\"created_at\", \">\", endDate)\r\n      .get();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { PdfPrintService } from 'projects/personal/src/app/services/pdf-print/pdf-print.service';\nimport { PaymentsApiService } from 'projects/restaurant/src/app/services/modules/payments-api/payments-api.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentsPrintService {\n\n  constructor(\n    private pdfPrint: PdfPrintService,\n    private paymentsApi: PaymentsApiService,\n  ) { }\n\n  // all payments\n\n  async printAllPayments(){\n    const paymentsGridData = await this.paymentsApi.getAllAccountPayment();\n\n    var body = [['Order ID', 'Payment Date', 'Amount Paid', 'Order ID', 'Customer Name']];\n\n    for (let data of paymentsGridData.docs){\n      var row = [];\n      let rowData: any = data.data();\n      row.push(rowData.order_code);\n      row.push(rowData.payment_date.asDate());\n      row.push(rowData.amount_paid);\n      row.push(rowData.order.order_code);\n      row.push(rowData.order.customer_name);\n\n      body.push(row);\n    }\n\n    let content = [\n      {\n        layout: 'lightHorizontalLines',\n        table: {\n          headerRows: 1,\n          widths: ['15%', '20%', '20%', '15%', '30%'],\n          body: body\n        }\n      }\n    ]\n\n    this.pdfPrint.openPdf(content);\n  }\n\n  // view payment\n\n  async printViewPayment(){\n    const paymentFormDate = await this.paymentsApi.getPayment();\n\n    let formData: any = paymentFormDate.data();\n\n    let content = [\n      {\n        columns: [\n          [\n            { text: 'Payment ID: ' + formData.payment_code },\n            { text: 'Payment Date: ' + formData.payment_date },\n            { text: 'Order ID: ' + formData.order.order_code },\n            { text: 'Customer Name: ' + formData.order.customer.customer_name },\n            { text: 'Amount Due: ' + formData.order.total_amount },\n            { text: 'Amount Paid: ' + formData.amount_paid },\n            { text: 'Balance: ' + (formData.order.total_amount - formData.amount_paid) },\n          ],\n          []\n        ]\n      },\n    ]\n\n    this.pdfPrint.openPdf(content);\n  }\n\n  async printPaymentRoll(){\n    const paymentFormDate = await this.paymentsApi.getPayment();\n\n    let formData: any = paymentFormDate.data();\n\n    let content = [\n      {\n        columns: [\n          [\n            { text: 'Payment ID: ' + formData.payment_code },\n            { text: 'Payment Date: ' + formData.payment_date },\n            { text: 'Order ID: ' + formData.order.order_code },\n            { text: 'Customer Name: ' + formData.order.customer.customer_name },\n            { text: 'Amount Due: ' + formData.order.total_amount },\n            { text: 'Amount Paid: ' + formData.amount_paid },\n            { text: 'Balance: ' + (formData.order.total_amount - formData.amount_paid) },\n          ],\n          []\n        ]\n      },\n    ];\n\n    this.pdfPrint.printRoll(content);\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}