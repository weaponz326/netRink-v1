{"version":3,"file":"projects_restaurant_src_app_pages_modules_roster-page_roster-page_module_ts.js","mappings":"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","sources":["./projects/restaurant/src/app/components/modules/roster/add-batch/add-batch.component.ts","./projects/restaurant/src/app/components/modules/roster/add-batch/add-batch.component.html","./projects/restaurant/src/app/components/modules/roster/add-personnel/add-personnel.component.ts","./projects/restaurant/src/app/components/modules/roster/add-personnel/add-personnel.component.html","./projects/restaurant/src/app/components/modules/roster/add-shift/add-shift.component.ts","./projects/restaurant/src/app/components/modules/roster/add-shift/add-shift.component.html","./projects/restaurant/src/app/components/modules/roster/all-roster/all-roster.component.ts","./projects/restaurant/src/app/components/modules/roster/all-roster/all-roster.component.html","./projects/restaurant/src/app/components/modules/roster/dashboard/dashboard.component.ts","./projects/restaurant/src/app/components/modules/roster/dashboard/dashboard.component.html","./projects/restaurant/src/app/components/modules/roster/edit-batch/edit-batch.component.ts","./projects/restaurant/src/app/components/modules/roster/edit-batch/edit-batch.component.html","./projects/restaurant/src/app/components/modules/roster/edit-personnel/edit-personnel.component.ts","./projects/restaurant/src/app/components/modules/roster/edit-personnel/edit-personnel.component.html","./projects/restaurant/src/app/components/modules/roster/edit-shift/edit-shift.component.ts","./projects/restaurant/src/app/components/modules/roster/edit-shift/edit-shift.component.html","./projects/restaurant/src/app/components/modules/roster/manage-batches/manage-batches.component.ts","./projects/restaurant/src/app/components/modules/roster/manage-batches/manage-batches.component.html","./projects/restaurant/src/app/components/modules/roster/manage-personnel/manage-personnel.component.ts","./projects/restaurant/src/app/components/modules/roster/manage-personnel/manage-personnel.component.html","./projects/restaurant/src/app/components/modules/roster/new-roster/new-roster.component.ts","./projects/restaurant/src/app/components/modules/roster/new-roster/new-roster.component.html","./projects/restaurant/src/app/components/modules/roster/personnel-form/personnel-form.component.ts","./projects/restaurant/src/app/components/modules/roster/personnel-form/personnel-form.component.html","./projects/restaurant/src/app/components/modules/roster/roster-sheet/roster-sheet.component.ts","./projects/restaurant/src/app/components/modules/roster/roster-sheet/roster-sheet.component.html","./projects/restaurant/src/app/components/modules/roster/roster.module.ts","./projects/restaurant/src/app/components/modules/roster/settings/settings.component.ts","./projects/restaurant/src/app/components/modules/roster/settings/settings.component.html","./projects/restaurant/src/app/components/modules/roster/shifts/shifts.component.ts","./projects/restaurant/src/app/components/modules/roster/shifts/shifts.component.html","./projects/restaurant/src/app/components/modules/roster/view-roster/view-roster.component.ts","./projects/restaurant/src/app/components/modules/roster/view-roster/view-roster.component.html","./projects/restaurant/src/app/pages/modules/roster-page/roster-page-routing.module.ts","./projects/restaurant/src/app/pages/modules/roster-page/roster-page.component.ts","./projects/restaurant/src/app/pages/modules/roster-page/roster-page.component.html","./projects/restaurant/src/app/pages/modules/roster-page/roster-page.module.ts"],"sourcesContent":["import { Component, OnInit, ViewChild, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { serverTimestamp } from 'firebase/firestore';\r\n\r\nimport { Batch } from 'projects/restaurant/src/app/models/modules/roster/roster.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-batch',\r\n  templateUrl: './add-batch.component.html',\r\n  styleUrls: ['./add-batch.component.scss']\r\n})\r\nexport class AddBatchComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Output() saveBatchEvent = new EventEmitter<any>();\r\n\r\n  @ViewChild('addButtonElementReference', { read: ElementRef, static: false }) addButton!: ElementRef;\r\n  @ViewChild('dismissButtonElementReference', { read: ElementRef, static: false }) dismissButton!: ElementRef;\r\n\r\n  batchForm: FormGroup = new FormGroup({});\r\n\r\n  isSaving = false;\r\n\r\n  ngOnInit(): void {\r\n    this.initBatchForm();\r\n  }\r\n\r\n  initBatchForm(){\r\n    this.batchForm = new FormGroup({\r\n      batchName: new FormControl(''),\r\n      batchSymbol: new FormControl(''),\r\n    })\r\n  }\r\n\r\n\r\n  openModal(){\r\n    this.addButton.nativeElement.click();\r\n  }\r\n\r\n  saveBatch(){\r\n    let data: Batch = {\r\n      created_at: serverTimestamp(),\r\n      roster: sessionStorage.getItem('restaurant_roster_id') as string,\r\n      batch_name: this.batchForm.controls.batchName.value,\r\n      batch_symbol: this.batchForm.controls.batchSymbol.value,\r\n    }\r\n    this.saveBatchEvent.emit(data);\r\n  }\r\n\r\n  resetForm(){\r\n    this.batchForm.controls.batchName.setValue('');\r\n    this.batchForm.controls.batchSymbol.setValue('');\r\n  }\r\n\r\n}\r\n","<button [hidden]=\"true\" #addButtonElementReference data-bs-toggle=\"modal\" data-bs-target=\"#addBatchModal\">\r\n    Launch demo modal\r\n</button>\r\n\r\n<div class=\"modal fade form-modal\" id=\"addBatchModal\" tabindex=\"-1\" aria-labelledby=\"addBatchModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n\r\n            <div class=\"modal-header bg-light\">\r\n                <span class=\"modal-title\" id=\"addBatchModalLabel\">Add Batch</span>\r\n                <button #dismissButtonElementReference type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n\r\n            <form class=\"page-form\" [formGroup]=\"batchForm\" (ngSubmit)=\"saveBatch()\">\r\n\r\n                <div class=\"modal-body\">\r\n                    <div class=\"row mb-1\">\r\n                        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Batch Name :</label></div>\r\n                        <div class=\"col-md-8\">\r\n                            <input formControlName=\"batchName\" class=\"form-control form-control-sm w-100\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row mb-1\">\r\n                        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Batch Symbol :</label></div>\r\n                        <div class=\"col-md-8\">\r\n                            <input formControlName=\"batchSymbol\" class=\"form-control form-control-sm w-100\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"modal-footer\">\r\n                    <button [disabled]=\"isSaving\" type=\"submit\" class=\"btn btn-sm btn-secondary modal-form-btn\">Save</button>\r\n                    <button type=\"button\" class=\"btn btn-sm btn-secondary modal-form-btn\" data-bs-dismiss=\"modal\">Cancel</button>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, Output, EventEmitter, ElementRef } from '@angular/core';\n\nimport { PersonnelFormComponent } from '../personnel-form/personnel-form.component';\n\nimport { Personnel } from 'projects/restaurant/src/app/models/modules/roster/roster.model';\n\n\n@Component({\n  selector: 'app-add-personnel',\n  templateUrl: './add-personnel.component.html',\n  styleUrls: ['./add-personnel.component.scss']\n})\nexport class AddPersonnelComponent implements OnInit {\n\n  constructor() { }\n\n  @Output() savePersonnelEvent = new EventEmitter<any>();\n\n  @ViewChild('addButtonElementReference', { read: ElementRef, static: false }) addButton!: ElementRef;\n  @ViewChild('dismssButtonElementReference', { read: ElementRef, static: false }) dismissButton!: ElementRef;\n\n  @ViewChild('personnelFormComponentReference', { read: PersonnelFormComponent, static: false }) personnelForm!: PersonnelFormComponent;\n\n  isSaving = false;\n\n  ngOnInit(): void {\n  }\n\n  openModal(){\n    this.addButton.nativeElement.click();\n    this.personnelForm.getBatches(\"\");\n  }\n\n  savePersonnel(){\n    let data: Personnel = {\n      roster: sessionStorage.getItem('restaurant_roster_id') as string,      \n      batch_symbol: this.personnelForm.personnelForm.controls.symbol.value,\n      staff: {\n        id: this.personnelForm.selectedStaffId,\n        staff_code: this.personnelForm.personnelForm.controls.personnelCode.value,\n        staff_name: this.personnelForm.personnelForm.controls.personnelName.value,\n      }\n    }\n    this.savePersonnelEvent.emit(data);\n  }\n\n  resetForm(){\n    this.personnelForm.personnelForm.controls.personnelCode.setValue('');\n    this.personnelForm.personnelForm.controls.personnelName.setValue('');\n    this.personnelForm.personnelForm.controls.batch.setValue('');\n  }\n\n}\n","<button [hidden]=\"true\" #addButtonElementReference data-bs-toggle=\"modal\" data-bs-target=\"#addPersonnelModal\">\n    Launch demo modal\n</button>\n\n<div class=\"modal fade form-modal\" id=\"addPersonnelModal\" tabindex=\"-1\" aria-labelledby=\"addPersonnelModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n\n            <div class=\"modal-header bg-light\">\n                <span class=\"modal-title\" id=\"addPersonnelModalLabel\">Add Personnel</span>\n                <button #dismissButtonElementReference type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n\n            <div class=\"modal-body\">\n\n                <!-- personnel form component -->\n\n                <app-personnel-form #personnelFormComponentReference></app-personnel-form>\n\n            </div>\n\n            <div class=\"modal-footer\">\n                <button [disabled]=\"isSaving\" type=\"submit\" class=\"btn btn-sm btn-secondary modal-form-btn\" (click)=\"savePersonnel()\">Save</button>\n                <button type=\"button\" class=\"btn btn-sm btn-secondary modal-form-btn\" data-bs-dismiss=\"modal\">Cancel</button>\n            </div>\n\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { serverTimestamp } from 'firebase/firestore';\r\n\r\nimport { Shift } from 'projects/restaurant/src/app/models/modules/roster/roster.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-shift',\r\n  templateUrl: './add-shift.component.html',\r\n  styleUrls: ['./add-shift.component.scss']\r\n})\r\nexport class AddShiftComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Output() saveShiftEvent = new EventEmitter<any>();\r\n\r\n  @ViewChild('addButtonElementReference', { read: ElementRef, static: false }) addButton!: ElementRef;\r\n  @ViewChild('dismissButtonElementReference', { read: ElementRef, static: false }) dismissButton!: ElementRef;\r\n\r\n  shiftForm: FormGroup = new FormGroup({});\r\n\r\n  isSaving = false;\r\n\r\n  ngOnInit(): void {\r\n    this.initShiftForm();\r\n  }\r\n\r\n  initShiftForm(){\r\n    this.shiftForm = new FormGroup({\r\n      shiftName: new FormControl(''),\r\n      startTime: new FormControl(''),\r\n      endTime: new FormControl(''),\r\n    })\r\n  }\r\n\r\n  openModal(){\r\n    this.addButton.nativeElement.click();\r\n  }\r\n\r\n  saveShift(){\r\n    let data: Shift = {\r\n      created_at: serverTimestamp(),\r\n      roster: sessionStorage.getItem('restaurant_roster_id') as string,\r\n      shift_name: this.shiftForm.controls.shiftName.value,\r\n      start_time: this.shiftForm.controls.startTime.value,\r\n      end_time: this.shiftForm.controls.endTime.value,\r\n    }\r\n\r\n    this.saveShiftEvent.emit(data);\r\n  }\r\n\r\n  resetForm(){\r\n    this.shiftForm.controls.shiftName.setValue('');\r\n    this.shiftForm.controls.startTime.setValue('');\r\n    this.shiftForm.controls.endTime.setValue('');\r\n  }\r\n\r\n}\r\n","<button [hidden]=\"true\" #addButtonElementReference data-bs-toggle=\"modal\" data-bs-target=\"#addShiftModal\">\r\n    Launch demo modal\r\n</button>\r\n\r\n<div class=\"modal fade form-modal\" id=\"addShiftModal\" tabindex=\"-1\" aria-labelledby=\"addShiftModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n\r\n            <div class=\"modal-header bg-light\">\r\n                <span class=\"modal-title\" id=\"addShiftModalLabel\">Add Shift</span>\r\n                <button #dismissButtonElementReference type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n\r\n            <form class=\"page-form\" [formGroup]=\"shiftForm\" (ngSubmit)=\"saveShift()\">\r\n\r\n                <div class=\"modal-body\">\r\n\r\n                    <div class=\"row mb-1\">\r\n                        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Shift Name :</label></div>\r\n                        <div class=\"col-md-8\">\r\n                            <input formControlName=\"shiftName\" class=\"form-control form-control-sm w-100\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row mb-1\">\r\n                        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Start Time :</label></div>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"time\" formControlName=\"startTime\" class=\"form-control form-control-sm w-100\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row mb-1\">\r\n                        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">End Time :</label></div>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"time\" formControlName=\"endTime\" class=\"form-control form-control-sm w-100\">\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"modal-footer\">\r\n                    <button [disabled]=\"isSaving\" type=\"submit\" class=\"btn btn-sm btn-secondary modal-form-btn\">Save</button>\r\n                    <button type=\"button\" class=\"btn btn-sm btn-secondary modal-form-btn\" data-bs-dismiss=\"modal\">Cancel</button>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { NewRosterComponent } from '../new-roster/new-roster.component'\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\n\r\nimport { RosterApiService } from 'projects/restaurant/src/app/services/modules/roster-api/roster-api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-all-roster',\r\n  templateUrl: './all-roster.component.html',\r\n  styleUrls: ['./all-roster.component.scss']\r\n})\r\nexport class AllRosterComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private rosterApi: RosterApiService\r\n  ) { }\r\n\r\n  @ViewChild('newRosterComponentReference', { read: NewRosterComponent, static: false }) newRoster!: NewRosterComponent;\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n\r\n  navHeading: any[] = [\r\n    { text: \"All Roster\", url: \"/home/roster/all-roster\" },\r\n  ];\r\n\r\n  rosterGridData: any[] = [];\r\n\r\n  isFetchingGridData: boolean =  false;\r\n  isDataAvailable: boolean =  true;\r\n\r\n  firstInResponse: any = [];\r\n  lastInResponse: any = [];\r\n  nextStartAfter: any = [];\r\n  prevStartAt: any = [];\r\n  pageNumber = 0;\r\n  disableNext: boolean = true;\r\n  disablePrev: boolean = true;\r\n\r\n  sortParams = {\r\n    field: \"created_at\",\r\n    direction: \"desc\"\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAccountRoster();\r\n  }\r\n\r\n  getAccountRoster(){\r\n    this.isFetchingGridData = true;\r\n\r\n    this.rosterApi.getAccountRoster(this.sortParams, 20)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.rosterGridData = res.docs;\r\n\r\n          this.isFetchingGridData = false;\r\n          this.prevStartAt = this.firstInResponse;\r\n          this.nextStartAfter = res.docs[res.docs.length - 1];\r\n          this.firstInResponse = res.docs[0];\r\n          this.pageNumber = 1;\r\n\r\n          if (!res.docs.length) this.isDataAvailable = false;\r\n          else this.isDataAvailable = true;\r\n\r\n          if (!res.docs.length || res.docs.length < 20){\r\n            this.disableNext = true;\r\n            this.disablePrev = true;\r\n          }\r\n          else{\r\n            this.disableNext = false;\r\n            this.disablePrev = true;\r\n          }\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isFetchingGridData = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  nextPage(e: any){\r\n    e.preventDefault();\r\n    this.isFetchingGridData = true;\r\n\r\n    this.rosterApi.getAccountRosterNext(this.sortParams, 20, this.nextStartAfter)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.rosterGridData = res.docs;\r\n\r\n          this.isFetchingGridData = false;\r\n          this.prevStartAt = this.firstInResponse;\r\n          this.nextStartAfter = res.docs[res.docs.length - 1];\r\n          this.firstInResponse = res.docs[0];\r\n          this.pageNumber++;\r\n\r\n          if (res.docs.length < 20){\r\n            this.disableNext = true;\r\n            this.disablePrev = false;\r\n          }\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isFetchingGridData = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  previousPage(e: any){\r\n    e.preventDefault();\r\n    this.isFetchingGridData = true;\r\n\r\n    this.rosterApi.getAccountRosterPrev(this.sortParams, 20, this.prevStartAt)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.rosterGridData = res.docs;\r\n\r\n          this.isFetchingGridData = false;\r\n          if (!res.docs.length) this.isDataAvailable = false;\r\n\r\n          this.prevStartAt = this.firstInResponse;\r\n          this.nextStartAfter = res.docs[res.docs.length - 1];\r\n          this.firstInResponse = res.docs[0];\r\n          this.pageNumber--;\r\n\r\n          if (this.pageNumber == 1){\r\n            this.disableNext = false;\r\n            this.disablePrev = true;\r\n          }\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isFetchingGridData = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  sortTable(field: any, direction: any){\r\n    this.sortParams.field = field;\r\n    this.sortParams.direction = direction;\r\n\r\n    this.getAccountRoster();\r\n  }\r\n\r\n  viewRoster(rosterId: any){\r\n    console.log(rosterId);\r\n    sessionStorage.setItem(\"restaurant_roster_id\", rosterId);\r\n\r\n    this.router.navigateByUrl(\"/home/roster/view-roster\");\r\n  }\r\n\r\n  onPrint(){\r\n    console.log(\"lets start printing...\");\r\n  }\r\n\r\n}\r\n","<app-module-topnav [headings]=\"navHeading\" [showPrint]=\"true\" (print)=\"onPrint()\"></app-module-topnav>\r\n\r\n<div class=\"container\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-7\">\r\n\r\n            <div class=\"row mb-3\">\r\n                <div class=\"col-md-12\">\r\n                    <button class=\"btn btn-secondary page-add-btn\" (click)=\"newRoster.openModal()\">New Roster</button>\r\n                    <button [disabled]=\"isFetchingGridData\" class=\"btn btn-light border float-end page-refresh-btn\" (click)=\"getAccountRoster()\">\r\n                        <i class=\"bi bi-arrow-clockwise\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"overflow-auto\">\r\n                <table class=\"table table-bordered table-sm w-100 page-table\">\r\n                    <thead>\r\n                        <tr class=\"bg-light\">\r\n                            <th width=\"30%\" class=\"min-width-2\">\r\n                                Roster ID\r\n                                <i *ngIf=\"sortParams.field != 'roster_code'\" class=\"bi bi-filter float-end list-pointer\" (click)=\"sortTable('roster_code', 'desc')\"></i>\r\n                                <i *ngIf=\"sortParams.field == 'roster_code' && sortParams.direction == 'desc'\" class=\"bi bi-sort-down float-end list-pointer\" (click)=\"sortTable('roster_code', 'asc')\"></i>\r\n                                <i *ngIf=\"sortParams.field == 'roster_code' && sortParams.direction == 'asc'\" class=\"bi bi-sort-up float-end list-pointer\" (click)=\"sortTable('roster_code', 'desc')\"></i>\r\n                            </th>\r\n                            <th width=\"70%\" class=\"min-width-4\">\r\n                                Roster Name\r\n                                <i *ngIf=\"sortParams.field != 'roster_name'\" class=\"bi bi-filter float-end list-pointer\" (click)=\"sortTable('roster_name', 'desc')\"></i>\r\n                                <i *ngIf=\"sortParams.field == 'roster_name' && sortParams.direction == 'desc'\" class=\"bi bi-sort-down float-end list-pointer\" (click)=\"sortTable('roster_name', 'asc')\"></i>\r\n                                <i *ngIf=\"sortParams.field == 'roster_name' && sortParams.direction == 'asc'\" class=\"bi bi-sort-up float-end list-pointer\" (click)=\"sortTable('roster_name', 'desc')\"></i>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let data of rosterGridData\" (dblclick)=\"viewRoster(data.id)\" class=\"table-pointer\">\r\n                            <td>{{data?.data().roster_code}}</td>\r\n                            <td>{{data?.data().roster_name}}</td>\r\n                        </tr>\r\n                        <tr *ngIf=\"isFetchingGridData\" class=\"text-center\">\r\n                            <td colspan=\"2\">\r\n                                <div class=\"spinner-grow m-4\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr *ngIf=\"!isDataAvailable && !isFetchingGridData\" class=\"text-center\">\r\n                            <td colspan=\"2\">\r\n                                <p class=\"m-4\">No data available</p>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr class=\"bg-light\">\r\n                            <td colspan=\"2\">\r\n                                <nav class=\"nav-light float-end\" aria-label=\"Page navigation\">\r\n                                    <ul class=\"pagination pagination-sm mb-0 justify-content-end\">\r\n                                        <li class=\"page-item\" [ngClass]=\"disablePrev ? 'disabled' : ''\">\r\n                                            <a class=\"page-link\" href=\"#\" aria-label=\"First\" (click)=\"previousPage($event)\">\r\n                                                <i class=\"bi bi-caret-left-fill\"></i>\r\n                                            </a>\r\n                                        </li>\r\n                                        <li class=\"page-item\">\r\n                                            <a class=\"page-link\" href=\"#\" aria-label=\"Current\" (click)=\"$event.preventDefault()\">\r\n                                                {{pageNumber}}\r\n                                            </a>\r\n                                        </li>\r\n                                        <li class=\"page-item\" [ngClass]=\"disableNext ? 'disabled' : ''\">\r\n                                            <a class=\"page-link\" href=\"#\" aria-label=\"Last\" (click)=\"nextPage($event)\">\r\n                                                <i class=\"bi bi-caret-right-fill\"></i>\r\n                                            </a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </nav>\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- connection error prompt component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n\r\n<!-- new roster modal component -->\r\n\r\n<app-new-roster #newRosterComponentReference></app-new-roster>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { ChartDataSets, ChartOptions } from 'chart.js';\r\nimport { Color, Label, SingleDataSet } from 'ng2-charts';\r\n\r\nimport { RosterApiService } from 'projects/restaurant/src/app/services/modules/roster-api/roster-api.service';\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private rosterApi: RosterApiService) { }\r\n\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n\r\n  navHeading: any[] = [\r\n    { text: \"Dashboard\", url: \"/home/roster/dashboard\" },\r\n  ];\r\n\r\n  allRosterCount: number = 0;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.getRosterCount();\r\n  }\r\n\r\n  getRosterCount(){\r\n    // this.rosterApi.getCounts(\"Roster\")\r\n    //   .subscribe(\r\n    //     res => {\r\n    //       console.log(res);\r\n    //       this.allRosterCount = res;\r\n    //     },\r\n    //     err => {\r\n    //       console.log(err);\r\n    //       this.connectionToast.openToast();\r\n    //     }\r\n    //   )\r\n  }\r\n\r\n}\r\n","<app-module-topnav [headings]=\"navHeading\"></app-module-topnav>\r\n\r\n<div class=\"container\">\r\n\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col-md-3 mb-4\">\r\n            <div class=\"card border-left-secondary shadow h-100 py-2\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"row no-gutters align-items-center\">\r\n                        <div class=\"col mr-2\">\r\n                            <div class=\"text-xs font-weight-bold text-uppercase mb-1\">All Roster</div>\r\n                            <div class=\"h5 mb-0 font-weight-bold text-gray-800\">{{allRosterCount}}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- connection error prompt component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n","import { Component, OnInit, ViewChild, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { Batch } from 'projects/restaurant/src/app/models/modules/roster/roster.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-batch',\r\n  templateUrl: './edit-batch.component.html',\r\n  styleUrls: ['./edit-batch.component.scss']\r\n})\r\nexport class EditBatchComponent implements OnInit {\r\n\r\n  @Output() saveBatchEvent = new EventEmitter<any>();\r\n  @Output() deleteBatchEvent = new EventEmitter<any>();\r\n\r\n  @ViewChild('editButtonElementReference', { read: ElementRef, static: false }) editButton!: ElementRef;\r\n  @ViewChild('dismissButtonElementReference', { read: ElementRef, static: false }) dismissButton!: ElementRef;\r\n\r\n  batchForm: FormGroup = new FormGroup({});\r\n  batchData: any;\r\n\r\n  isSaving = false;\r\n\r\n  ngOnInit(): void {\r\n    this.initBatchForm();\r\n  }\r\n\r\n  initBatchForm(){\r\n    this.batchForm = new FormGroup({\r\n      batchName: new FormControl(''),\r\n      batchSymbol: new FormControl(''),\r\n    })\r\n  }\r\n\r\n  openModal(data: any){\r\n    console.log(data);\r\n    this.batchData = data;\r\n\r\n    this.batchForm.controls.batchName.setValue(data.data().batch_name);\r\n    this.batchForm.controls.batchSymbol.setValue(data.data().batch_symbol);\r\n\r\n    this.editButton.nativeElement.click();\r\n  }\r\n\r\n  saveBatch(){\r\n    let data = {\r\n      batch_name: this.batchForm.controls.batchName.value,\r\n      batch_symbol: this.batchForm.controls.batchSymbol.value,\r\n    }\r\n\r\n    let batch = {\r\n      id: this.batchData.id,\r\n      data: data,\r\n    }\r\n\r\n    this.saveBatchEvent.emit(batch);\r\n  }\r\n\r\n}\r\n","<button [hidden]=\"true\" #editButtonElementReference data-bs-toggle=\"modal\" data-bs-target=\"#editBatchModal\">\r\n    Launch demo modal\r\n</button>\r\n\r\n<div class=\"modal fade form-modal\" id=\"editBatchModal\" tabindex=\"-1\" aria-labelledby=\"editBatchModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n\r\n            <div class=\"modal-header bg-light\">\r\n                <span class=\"modal-title\" id=\"editBatchModalLabel\">Edit Batch</span>\r\n                <button #dismissButtonElementReference type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n\r\n            <form class=\"page-form\" [formGroup]=\"batchForm\" (ngSubmit)=\"saveBatch()\">\r\n\r\n                <div class=\"modal-body\">\r\n                    <div class=\"row mb-1\">\r\n                        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Batch Name :</label></div>\r\n                        <div class=\"col-md-8\">\r\n                            <input formControlName=\"batchName\" class=\"form-control form-control-sm w-100\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row mb-1\">\r\n                        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Batch Symbol :</label></div>\r\n                        <div class=\"col-md-8\">\r\n                            <input formControlName=\"batchSymbol\" class=\"form-control form-control-sm w-100\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"modal-footer\">\r\n                    <button [disabled]=\"isSaving\" type=\"submit\" class=\"btn btn-sm btn-secondary modal-form-btn\">Save</button>\r\n                    <button type=\"button\" class=\"btn btn-sm btn-secondary modal-form-btn\" data-bs-dismiss=\"modal\">Cancel</button>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, Output, EventEmitter, ElementRef } from '@angular/core';\r\n\r\nimport { PersonnelFormComponent } from '../personnel-form/personnel-form.component';\r\n\r\nimport { Personnel } from 'projects/restaurant/src/app/models/modules/roster/roster.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-personnel',\r\n  templateUrl: './edit-personnel.component.html',\r\n  styleUrls: ['./edit-personnel.component.scss']\r\n})\r\nexport class EditPersonnelComponent implements OnInit {\r\n\r\n  @Output() savePersonnelEvent = new EventEmitter<any>();\r\n  @Output() deletePersonnelEvent = new EventEmitter<any>();\r\n\r\n  @ViewChild('editButtonElementReference', { read: ElementRef, static: false }) editButton!: ElementRef;\r\n  @ViewChild('dismssButtonElementReference', { read: ElementRef, static: false }) dismissButton!: ElementRef;\r\n\r\n  @ViewChild('personnelFormComponentReference', { read: PersonnelFormComponent, static: false }) personnelForm!: PersonnelFormComponent;\r\n\r\n  personnelData: any\r\n\r\n  isSaving = false;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openModal(data: any){\r\n    this.personnelData = data;\r\n\r\n    this.personnelForm.personnelForm.controls.personnelCode.setValue(data.data().personnel_code);\r\n    this.personnelForm.personnelForm.controls.personnelName.setValue(data.data().personnel_name);\r\n\r\n    this.personnelForm.getBatches(data.data().batch_symbol);\r\n\r\n    this.editButton.nativeElement.click();\r\n  }\r\n\r\n  savePersonnel(){\r\n    let data = {\r\n      batch_symbol: this.personnelForm.personnelForm.controls.symbol.value,\r\n      staff: {\r\n        id: this.personnelForm.selectedStaffId,\r\n        staff_code: this.personnelForm.personnelForm.controls.personnelCode.value,\r\n        staff_name: this.personnelForm.personnelForm.controls.personnelName.value,\r\n      }\r\n    }\r\n\r\n    let personnel = {\r\n      id: this.personnelData.id,\r\n      data: data\r\n    }\r\n\r\n    this.savePersonnelEvent.emit(personnel);\r\n  }\r\n\r\n}\r\n","<button [hidden]=\"true\" #buttonElementReference data-bs-toggle=\"modal\" data-bs-target=\"#addPersonnelModal\">\r\n    Launch demo modal\r\n</button>\r\n\r\n<div class=\"modal fade form-modal\" id=\"addPersonnelModal\" tabindex=\"-1\" aria-labelledby=\"addPersonnelModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n\r\n            <div class=\"modal-header bg-light\">\r\n                <span class=\"modal-title\" id=\"addPersonnelModalLabel\">Edit Personnel</span>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\">\r\n\r\n                <!-- personnel form component -->\r\n\r\n                <app-personnel-form #personnelFormComponentReference></app-personnel-form>\r\n\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n                <button [disabled]=\"isSaving\" type=\"submit\" class=\"btn btn-sm btn-secondary modal-form-btn\" (click)=\"savePersonnel()\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-sm btn-secondary modal-form-btn\" data-bs-dismiss=\"modal\">Cancel</button>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { Shift } from 'projects/restaurant/src/app/models/modules/roster/roster.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-shift',\r\n  templateUrl: './edit-shift.component.html',\r\n  styleUrls: ['./edit-shift.component.scss']\r\n})\r\nexport class EditShiftComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Output() saveShiftEvent = new EventEmitter<any>();\r\n\r\n  @ViewChild('editButtonElementReference', { read: ElementRef, static: false }) editButton!: ElementRef;\r\n  @ViewChild('dismissButtonElementReference', { read: ElementRef, static: false }) dismissButton!: ElementRef;\r\n\r\n  shiftForm: FormGroup = new FormGroup({});\r\n  shiftData: any;\r\n\r\n  isSaving = false;\r\n\r\n  ngOnInit(): void {\r\n    this.initShiftForm();\r\n  }\r\n\r\n  initShiftForm(){\r\n    this.shiftForm = new FormGroup({\r\n      shiftName: new FormControl(''),\r\n      startTime: new FormControl(''),\r\n      endTime: new FormControl(''),\r\n    })\r\n  }\r\n\r\n  openModal(data: any){\r\n    this.shiftData = data;\r\n\r\n    this.shiftForm.controls.shiftName.setValue(data.data().shift_name);\r\n    this.shiftForm.controls.startTime.setValue(data.data().start_time);\r\n    this.shiftForm.controls.endTime.setValue(data.data().end_time);\r\n\r\n    this.editButton.nativeElement.click();\r\n  }\r\n\r\n  saveShift(){\r\n    let data = {\r\n      shift_name: this.shiftForm.controls.shiftName.value,\r\n      start_time: this.shiftForm.controls.startTime.value,\r\n      end_time: this.shiftForm.controls.endTime.value,\r\n    }\r\n\r\n    let shift = {\r\n      id: this.shiftData.id,\r\n      data: data\r\n    }\r\n\r\n    this.saveShiftEvent.emit(shift);\r\n  }\r\n\r\n\r\n}\r\n","<button [hidden]=\"true\" #editButtonElementReference data-bs-toggle=\"modal\" data-bs-target=\"#editShiftModal\">\r\n    Launch demo modal\r\n</button>\r\n\r\n<div class=\"modal fade form-modal\" id=\"editShiftModal\" tabindex=\"-1\" aria-labelledby=\"editShiftModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n\r\n            <div class=\"modal-header bg-light\">\r\n                <span class=\"modal-title\" id=\"editShiftModalLabel\">Edit Shift</span>\r\n                <button #dismissButtonElementReference type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n\r\n            <form class=\"page-form\" [formGroup]=\"shiftForm\" (ngSubmit)=\"saveShift()\">\r\n\r\n                <div class=\"modal-body\">\r\n\r\n                    <div class=\"row mb-1\">\r\n                        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Shift Name :</label></div>\r\n                        <div class=\"col-md-8\">\r\n                            <input formControlName=\"shiftName\" class=\"form-control form-control-sm w-100\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row mb-1\">\r\n                        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Start Time :</label></div>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"time\" formControlName=\"startTime\" class=\"form-control form-control-sm w-100\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row mb-1\">\r\n                        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">End Time :</label></div>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"time\" formControlName=\"endTime\" class=\"form-control form-control-sm w-100\">\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"modal-footer\">\r\n                    <button [disabled]=\"isSaving\" type=\"submit\" class=\"btn btn-sm btn-secondary modal-form-btn\">Save</button>\r\n                    <button type=\"button\" class=\"btn btn-sm btn-secondary modal-form-btn\" data-bs-dismiss=\"modal\">Cancel</button>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { ManagePersonnelComponent } from '../manage-personnel/manage-personnel.component';\r\nimport { AddBatchComponent } from '../add-batch/add-batch.component'\r\nimport { EditBatchComponent } from '../edit-batch/edit-batch.component'\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\nimport { DeleteModalComponent } from 'projects/personal/src/app/components/module-utilities/delete-modal/delete-modal.component'\r\n\r\nimport { RosterApiService } from 'projects/restaurant/src/app/services/modules/roster-api/roster-api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-manage-batches',\r\n  templateUrl: './manage-batches.component.html',\r\n  styleUrls: ['./manage-batches.component.scss']\r\n})\r\nexport class ManageBatchesComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private rosterApi: RosterApiService\r\n  ) { }\r\n\r\n  @ViewChild('managePersonnelComponentReference', { read: ManagePersonnelComponent, static: false }) managePersonnel!: ManagePersonnelComponent;\r\n  @ViewChild('addBatchComponentReference', { read: AddBatchComponent, static: false }) addBatch!: AddBatchComponent;\r\n  @ViewChild('editBatchComponentReference', { read: EditBatchComponent, static: false }) editBatch!: EditBatchComponent;\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n  @ViewChild('deleteModalComponentReference', { read: DeleteModalComponent, static: false }) deleteModal!: DeleteModalComponent;\r\n\r\n  navHeading: any[] = [\r\n    { text: \"All Roster\", url: \"/home/roster/all-roster\" },\r\n    { text: \"View Roster\", url: \"/home/roster/view-roster\" },\r\n    { text: \"Manage Batches\", url: \"/home/roster/manage-batches\" },\r\n  ];\r\n\r\n  rosterForm: FormGroup = new FormGroup({});\r\n\r\n  batchesGridData: any[] = [];\r\n  isFetchingGridData: boolean = false;\r\n\r\n  deleteId: any;\r\n\r\n  ngOnInit(): void {\r\n    this.initRosterForm();\r\n\r\n    this.getRoster();\r\n    this.getRosterBatch();\r\n  }\r\n\r\n  initRosterForm(){\r\n    this.rosterForm = new FormGroup({\r\n      rosterCode: new FormControl({value: \"\", disabled: true}),\r\n      rosterName: new FormControl({value: \"\", disabled: true}),\r\n    })\r\n  }\r\n\r\n  getRoster(){\r\n    this.rosterApi.getRoster()\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n\r\n          this.rosterForm.controls.rosterCode.setValue(res.data().roster_code);\r\n          this.rosterForm.controls.rosterName.setValue(res.data().roster_name);\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  // --------------------------------------------------------------------------------------\r\n  // grid\r\n\r\n  getRosterBatch(){\r\n    this.isFetchingGridData = true;\r\n\r\n    this.rosterApi.getRosterBatch()\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.batchesGridData = res.docs\r\n          this.isFetchingGridData = false;\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isFetchingGridData = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  createBatch(data: any){\r\n    console.log(data);\r\n    this.addBatch.isSaving = true;\r\n\r\n    this.rosterApi.createBatch(data)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n\r\n          if(res.id){\r\n            this.getRosterBatch();\r\n            this.addBatch.isSaving = false;\r\n            this.addBatch.dismissButton.nativeElement.click();\r\n            this.addBatch.resetForm();\r\n          }\r\n        },\r\n        err => {\r\n          console.log(err);\r\n          this.addBatch.isSaving = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  updateBatch(data: any){\r\n    console.log(data);\r\n    this.editBatch.isSaving = true;\r\n\r\n    this.rosterApi.updateBatch(data.id, data.batch)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n\r\n          this.getRosterBatch();\r\n          this.editBatch.isSaving = false;\r\n          this.editBatch.dismissButton.nativeElement.click();\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.editBatch.isSaving = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  deleteBatch(){\r\n    this.rosterApi.deleteBatch(this.deleteId)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.getRosterBatch();\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  openEditBatch(data: any){\r\n    console.log(data);\r\n    this.editBatch.openModal(data);\r\n  }\r\n\r\n  confirmDelete(id: any){\r\n    this.deleteId = id;\r\n    this.deleteModal.openModal();\r\n  }\r\n\r\n  onPrint(){\r\n    console.log(\"lets start printing...\");\r\n  }\r\n\r\n}\r\n","<app-module-topnav [headings]=\"navHeading\"></app-module-topnav>\r\n\r\n<div class=\"container\">\r\n\r\n    <form class=\"page-form\" [formGroup]=\"rosterForm\">\r\n\r\n        <div class=\"row page-form\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <h4>Roster Details</h4>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row mb-1\">\r\n                    <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Roster ID :</label></div>\r\n                    <div class=\"col-md-8\">\r\n                        <input formControlName=\"rosterCode\" class=\"form-control form-control-sm w-100\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-1\">\r\n                    <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Roster Name :</label></div>\r\n                    <div class=\"col-md-8\">\r\n                        <input formControlName=\"rosterName\" class=\"form-control form-control-sm w-100\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n    <hr class=\"top-divider\" />\r\n    <hr class=\"bottom-divider\" />\r\n\r\n    <!-- --------------------------------------------------------------------------------------------------------------------- -->\r\n\r\n    <div class=\"row mb-2\">\r\n        <div class=\"col-md-12\">\r\n            <button class=\"btn btn-secondary float-end nr-standard-font\" routerLink=\"/home/roster/view-roster\">\r\n                <i class=\"bi bi-arrow-left-right me-2\"></i> Roster Sheet\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n\r\n            <h4>Roster Batches</h4>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n\r\n                    <div class=\"overflow-auto\">\r\n                        <table class=\"table table-bordered table-sm w-100 page-table\">\r\n                            <thead>\r\n                                <tr class=\"bg-light\">\r\n                                    <th width=\"55%\" class=\"min-width-3\">Batch Name</th>\r\n                                    <th width=\"30%\" class=\"min-width-2\">Batch Symbol</th>\r\n                                    <th width=\"15%\" class=\"p-0 min-width-2\">\r\n                                        <button class=\"btn btn-secondary btn-sm w-100\" (click)=\"addBatch.openModal()\">\r\n                                            <i class=\"bi bi-plus\"></i>\r\n                                        </button>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let data of batchesGridData\">\r\n                                    <td>{{data?.data().batch_name}}</td>\r\n                                    <td>{{data?.data().batch_symbol}}</td>\r\n                                    <td class=\"p-0\">\r\n                                        <button class=\"btn btn-sm border w-50\" (click)=\"openEditBatch(data)\"><i class=\"bi bi-pen\"></i></button>\r\n                                        <button class=\"btn btn-sm border w-50\" (click)=\"confirmDelete(data.id)\"><i class=\"bi bi-trash\"></i></button>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr *ngIf=\"isFetchingGridData\" class=\"text-center\">\r\n                                    <td colspan=\"3\">\r\n                                        <div class=\"spinner-grow spinner-grow-sm m-2\" role=\"status\">\r\n                                            <span class=\"visually-hidden\">Loading...</span>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n\r\n            <!-- manage personnel component -->\r\n\r\n            <app-manage-personnel #managePersonnelComponentReference></app-manage-personnel>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- add and edit batch modal components -->\r\n\r\n<app-add-batch #addBatchComponentReference (saveBatchEvent)=\"createBatch($event)\"></app-add-batch>\r\n\r\n<app-edit-batch #editBatchComponentReference (saveBatchEvent)=\"updateBatch($event)\" (deleteBatch)=\"confirmDelete($event)\"></app-edit-batch>\r\n\r\n<!-- connection error toast component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n\r\n<!-- delete confirmation modal component -->\r\n\r\n<app-delete-modal #deleteModalComponentReference (confirmEvent)=\"deleteBatch()\"></app-delete-modal>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { AddPersonnelComponent } from '../add-personnel/add-personnel.component'\r\nimport { EditPersonnelComponent } from '../edit-personnel/edit-personnel.component'\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\nimport { DeleteModalComponent } from 'projects/personal/src/app/components/module-utilities/delete-modal/delete-modal.component'\r\n\r\nimport { RosterApiService } from 'projects/restaurant/src/app/services/modules/roster-api/roster-api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-manage-personnel',\r\n  templateUrl: './manage-personnel.component.html',\r\n  styleUrls: ['./manage-personnel.component.scss']\r\n})\r\nexport class ManagePersonnelComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private rosterApi: RosterApiService\r\n  ) { }\r\n\r\n  @ViewChild('addPersonnelComponentReference', { read: AddPersonnelComponent, static: false }) addPersonnel!: AddPersonnelComponent;\r\n  @ViewChild('editPersonnelComponentReference', { read: EditPersonnelComponent, static: false }) editPersonnel!: EditPersonnelComponent;\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n  @ViewChild('deleteModalComponentReference', { read: DeleteModalComponent, static: false }) deleteModal!: DeleteModalComponent;\r\n\r\n  personnelGridData: any[] = [];\r\n  isFetchingGridData = false;\r\n\r\n  deleteId = \"\";\r\n\r\n  ngOnInit(): void {\r\n    this.getRosterPersonnel();\r\n  }\r\n\r\n  getRosterPersonnel(){\r\n    this.isFetchingGridData = true;\r\n\r\n    this.rosterApi.getRosterPersonnel()\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.personnelGridData = res.docs;\r\n          this.isFetchingGridData = false;\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isFetchingGridData = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  createPersonnel(data: any){\r\n    console.log(data);\r\n    this.addPersonnel.isSaving = true;\r\n\r\n    this.rosterApi.createPersonnel(data)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n\r\n          if(res.id){\r\n            this.getRosterPersonnel();\r\n            this.addPersonnel.isSaving = false;\r\n            this.addPersonnel.dismissButton.nativeElement.ckick();\r\n            this.addPersonnel.resetForm();\r\n          }\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n            this.addPersonnel.isSaving = false;\r\n            this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  updatePersonnel(data: any){\r\n    console.log(data);\r\n    this.editPersonnel.isSaving = true;\r\n\r\n    this.rosterApi.updatePersonnel(data.id, data.personnel)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          \r\n          this.getRosterPersonnel();\r\n          this.editPersonnel.isSaving = false;\r\n          this.editPersonnel.dismissButton.nativeElement.ckick();\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.editPersonnel.isSaving = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  deletePersonnel(){\r\n    this.rosterApi.deletePersonnel(this.deleteId)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);        \r\n          this.getRosterPersonnel();\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  openEditPersonnel(data: any){\r\n    console.log(data);\r\n    this.editPersonnel.openModal(data);\r\n  }\r\n\r\n  confirmDelete(id: any){\r\n    this.deleteId = id;\r\n    this.deleteModal.openModal();\r\n  }\r\n\r\n}\r\n","<h4>Roster Personnel</h4>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n\r\n        <div class=\"overflow-auto\">\r\n            <table class=\"table table-bordered table-sm w-100 page-table\">\r\n                <thead>\r\n                    <tr class=\"bg-light\">\r\n                        <th width=\"20%\" class=\"min-width-2\">Personnel ID</th>\r\n                        <th width=\"45%\" class=\"min-width-3\">Personnel Name</th>\r\n                        <th width=\"20%\" class=\"min-width-2\">Batch</th>\r\n                        <th width=\"15%\" class=\"p-0 min-width-2\">\r\n                            <button class=\"btn btn-secondary btn-sm w-100\" (click)=\"addPersonnel.openModal()\">\r\n                                <i class=\"bi bi-plus\"></i>\r\n                            </button>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let data of personnelGridData\">\r\n                        <td>{{data?.personnel_code}}</td>\r\n                        <td>{{data?.personnel_name}}</td>\r\n                        <td>{{data?.batch_sybol}}</td>\r\n                        <td class=\"p-0\">\r\n                            <button class=\"btn btn-sm border w-50\" (click)=\"openEditPersonnel(data)\"><i class=\"bi bi-pen\"></i></button>\r\n                            <button class=\"btn btn-sm border w-50\" (click)=\"confirmDelete(data.id)\"><i class=\"bi bi-trash\"></i></button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr *ngIf=\"isFetchingGridData\" class=\"text-center\">\r\n                        <td colspan=\"4\">\r\n                            <div class=\"spinner-grow spinner-grow-sm m-2\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<!-- add and edit personnel modal components -->\r\n\r\n<app-edit-personnel #editPersonnelComponentReference (savePersonnelEvent)=\"createPersonnel($event)\"></app-edit-personnel>\r\n\r\n<app-add-personnel #addPersonnelComponentReference (savePersonnelEvent)=\"updatePersonnel($event)\" (deletePersonnelEvent)=\"confirmDelete($event)\"></app-add-personnel>\r\n\r\n<!-- connection error toast component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n\r\n<!-- delete confirmation modal component -->\r\n\r\n<app-delete-modal #deleteModalComponentReference (confirmEvent)=\"deletePersonnel()\"></app-delete-modal>\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { serverTimestamp } from 'firebase/firestore';\r\nimport moment from 'moment/moment';\r\n\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\n\r\nimport { RosterApiService } from 'projects/restaurant/src/app/services/modules/roster-api/roster-api.service';\r\n\r\nimport { Roster, RosterSheet } from 'projects/restaurant/src/app/models/modules/roster/roster.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-roster',\r\n  templateUrl: './new-roster.component.html',\r\n  styleUrls: ['./new-roster.component.scss']\r\n})\r\nexport class NewRosterComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private rosterApi: RosterApiService\r\n  ) { }\r\n\r\n  @ViewChild('newButtonElementReference', { read: ElementRef, static: false }) newButton!: ElementRef;\r\n  @ViewChild('dismissButtonElementReference', { read: ElementRef, static: false }) dismissButton!: ElementRef;\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n\r\n  rosterForm: FormGroup = new FormGroup({});\r\n\r\n  isRosterSaving = false;\r\n\r\n  ngOnInit(): void {\r\n    this.initRosterForm();\r\n  }\r\n\r\n  openModal(){\r\n    this.newButton.nativeElement.click();\r\n  }\r\n\r\n  initRosterForm(){\r\n    this.rosterForm = new FormGroup({\r\n      rosterCode: new FormControl(''),\r\n      rosterName: new FormControl(''),\r\n      fromDate: new FormControl(''),\r\n      toDate: new FormControl(''),\r\n    })\r\n  }\r\n\r\n  createRoster(){\r\n    let data: Roster = {\r\n      created_at: serverTimestamp(),\r\n      account: localStorage.getItem('restaurant_id') as string,\r\n      roster_code: this.rosterForm.controls.rosterCode.value,\r\n      roster_name: this.rosterForm.controls.rosterName.value,\r\n      from_date: this.rosterForm.controls.fromDate.value,\r\n      to_date: this.rosterForm.controls.toDate.value,\r\n    }\r\n\r\n    this.isRosterSaving = true;\r\n\r\n    this.rosterApi.createRoster(data)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n\r\n          if(res.id){\r\n            sessionStorage.setItem('restaurant_roster_id', res.id);\r\n            this.dismissButton.nativeElement.click();\r\n            this.router.navigateByUrl('/home/roster/view-roster');\r\n            this.isRosterSaving = false;\r\n\r\n            this.createSheet();\r\n          }\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n            this.isRosterSaving = false;\r\n            this.connectionToast.openToast();\r\n        }\r\n      )\r\n\r\n    console.log(data);\r\n  }\r\n\r\n  createSheet(){\r\n    let sheetDays = this.enumerateDaysBetweenDates(this.rosterForm.controls.fromDate.value, this.rosterForm.controls.toDate.value);\r\n    let data: RosterSheet = {\r\n      shifts: [],\r\n      days: sheetDays,\r\n      sheet: []\r\n    }\r\n\r\n    this.rosterApi.createSheet(sessionStorage.getItem('restaurant_roster_id'), data)\r\n      .then(\r\n        (res: any) => console.log(res),\r\n        (err: any) => console.log(err)\r\n      )\r\n\r\n    console.log(data);\r\n  }\r\n\r\n  enumerateDaysBetweenDates(startDate: any, endDate: any) {\r\n    var sheetDays = [];\r\n    var firstDate = moment(startDate).startOf('day');\r\n    var lastDate = moment(endDate).startOf('day');\r\n\r\n    while(firstDate.add(1, 'days').diff(lastDate) <= 0) {\r\n        console.log(firstDate.toDate());\r\n        sheetDays.push(firstDate.clone().toDate());\r\n    }\r\n\r\n    return sheetDays;\r\n  };\r\n\r\n}\r\n","<button [hidden]=\"true\" #newButtonElementReference data-bs-toggle=\"modal\" data-bs-target=\"#newRosterModal\">\r\n    Launch demo modal\r\n</button>\r\n\r\n<div class=\"modal fade form-modal\" id=\"newRosterModal\" tabindex=\"-1\" aria-labelledby=\"newRosterModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n\r\n            <form class=\"page-form\" [formGroup]=\"rosterForm\" (ngSubmit)=\"createRoster()\">\r\n\r\n                <div class=\"modal-header bg-light\">\r\n                    <span class=\"modal-title\" id=\"newRosterModalLabel\">New Roster</span>\r\n                    <button #dismissButtonElementReference type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n\r\n                <div class=\"modal-body\">\r\n                    <div class=\"row mb-1\">\r\n                        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Roster ID :</label></div>\r\n                        <div class=\"col-md-8\">\r\n                            <input formControlName=\"rosterCode\" class=\"form-control form-control-sm w-100\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row mb-1\">\r\n                        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Roster Name :</label></div>\r\n                        <div class=\"col-md-8\">\r\n                            <input formControlName=\"rosterName\" class=\"form-control form-control-sm w-100\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row mb-1\">\r\n                        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Date From :</label></div>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"date\" formControlName=\"fromDate\" class=\"form-control form-control-sm w-100\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row mb-1\">\r\n                        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Date To :</label></div>\r\n                        <div class=\"col-md-8\">\r\n                            <input type=\"date\" formControlName=\"toDate\" class=\"form-control form-control-sm w-100\">\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"modal-footer\">\r\n                    <button [disabled]=\"isRosterSaving\" type=\"submit\" class=\"btn btn-sm btn-secondary modal-form-btn\">Save</button>\r\n                    <button type=\"button\" class=\"btn btn-sm btn-secondary modal-form-btn\" data-bs-dismiss=\"modal\">Cancel</button>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- connection error toast component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\nimport { SelectStaffComponent } from '../../../select-windows/staff-windows/select-staff/select-staff.component';\n\nimport { RosterApiService } from 'projects/restaurant/src/app/services/modules/roster-api/roster-api.service';\n\n\n@Component({\n  selector: 'app-personnel-form',\n  templateUrl: './personnel-form.component.html',\n  styleUrls: ['./personnel-form.component.scss']\n})\nexport class PersonnelFormComponent implements OnInit {\n\n  constructor(private rosterApi: RosterApiService) { }\n\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\n  @ViewChild('selectStaffComponentReference', { read: SelectStaffComponent, static: false }) selectStaff!: SelectStaffComponent;\n\n  personnelForm: FormGroup = new FormGroup({});\n\n  batchSource: any[] = [];\n\n  selectedStaffId: any;\n\n  ngOnInit(): void {\n    this.initPersonnelForm();\n  }\n\n  initPersonnelForm(){\n    this.personnelForm = new FormGroup({\n      personnelCode: new FormControl({value: \"\", disabled: true}),\n      personnelName: new FormControl({value: \"\", disabled: true}),\n      batchSymbol: new FormControl(''),\n    })\n  }\n\n  getBatches(batch: any){\n    this.rosterApi.getRosterBatch()\n      .then(\n        (res: any) => {\n          console.log(res);        \n          this.batchSource = res.docs;\n          this.personnelForm.controls.batchSymbol.setValue(batch);\n        },\n        (err: any) => {\n          console.log(err);\n          this.connectionToast.openToast();\n        }\n      )\n  }\n\n  onStaffSelected(staffData: any){\n    console.log(staffData);\n\n    this.selectedStaffId = staffData.id;\n    this.personnelForm.controls.personnelCode.setValue(staffData.data().staff_code);\n    this.personnelForm.controls.personnelName.setValue(staffData.data().first_name + \" \" + staffData.data().first_name);\n    this.personnelForm.controls.batchSymbol.setValue(staffData.data().batch_symbol);\n  }\n\n  openStaffWindow(){\n    console.log(\"You are opening select staff window\")\n    this.selectStaff.openModal();\n  }\n\n}\n","<form class=\"page-form\" [formGroup]=\"personnelForm\">\r\n\r\n    <div class=\"row mb-1\">\r\n        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Personnel Code :</label></div>\r\n        <div class=\"col-md-8\">\r\n            <div class=\"input-group input-group-sm w-100\">\r\n                <input formControlName=\"personnelCode\" class=\"form-control\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" (click)=\"openStaffWindow()\">\r\n                    <i class=\"bi bi-three-dots\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mb-1\">\r\n        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Personnel Name :</label></div>\r\n        <div class=\"col-md-8\">\r\n            <div class=\"input-group input-group-sm w-100\">\r\n                <input formControlName=\"personnelName\" class=\"form-control\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" (click)=\"openStaffWindow()\">\r\n                    <i class=\"bi bi-three-dots\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mb-1\">\r\n        <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Batch :</label></div>\r\n        <div class=\"col-md-8\">\r\n            <select formControlName=\"batchSymbol\" class=\"form-control form-control-sm w-100\">\r\n                <option *ngFor=\"let batch of batchSource\">{{batch.data().batch_symbol}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n\r\n</form>\r\n\r\n<!-- select staff window component reference -->\r\n\r\n<app-select-staff #selectStaffComponentReference (rowSelected)=\"onStaffSelected($event)\"></app-select-staff>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport moment from 'moment/moment';\r\n\r\nimport { RosterApiService } from 'projects/restaurant/src/app/services/modules/roster-api/roster-api.service';\r\n\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\n\r\n\r\n@Component({\r\n  selector: 'app-roster-sheet',\r\n  templateUrl: './roster-sheet.component.html',\r\n  styleUrls: ['./roster-sheet.component.scss']\r\n})\r\nexport class RosterSheetComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private rosterApi: RosterApiService\r\n  ) { }\r\n\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n\r\n  dataSource: any[] = [];\r\n  sheetColumns: any[] = [];\r\n  sheetDataFields: any = [];\r\n  sheetEditDropDownSource: any[] = [];\r\n\r\n  isFetchingSheetData = false;\r\n  isSheetSaving = false;\r\n\r\n  rosterSheetData: any;\r\n  rosterShiftsData: any;\r\n  rosterBatchesData: any;\r\n\r\n  sheetDays: any[] = [];\r\n  sheetShifts: any[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.getSheet();\r\n    this.getRosterShift();\r\n    this.getRosterBatch();\r\n  }\r\n\r\n  getSheet(){\r\n    this.rosterApi.getSheet()\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.sheetDays = res.data().days;\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  getRosterShift(){\r\n    this.rosterApi.getRosterShift()\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.rosterShiftsData = res;\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  getRosterBatch(){\r\n    this.rosterApi.getRosterBatch()\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.rosterBatchesData = res.docs;\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  enumerateDaysBetweenDates(startDate: any, endDate: any) {\r\n    var firstDate = moment(startDate).startOf('day');\r\n    var lastDate = moment(endDate).startOf('day');\r\n\r\n    while(firstDate.add(1, 'days').diff(lastDate) < 0) {\r\n        console.log(firstDate.toDate());\r\n        this.sheetDays.push(firstDate.clone().toDate());\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  setRosterColumns(shiftDays: any){\r\n    // set datafields\r\n    this.sheetDataFields = [];\r\n    this.sheetDataFields.push('id: string');\r\n    this.sheetDataFields.push('shift_id: string');\r\n    this.sheetDataFields.push('shift_name: string');\r\n\r\n    // set columns\r\n    this.sheetColumns = [];\r\n    this.sheetColumns.push({ label: \"Shift Name\", dataField: \"shift_name\", width: \"18%\" });\r\n\r\n    shiftDays.forEach((day: { id: any; day: any; }) => {\r\n      // datafields\r\n      this.sheetDataFields.push({ name: day.id, type: 'string' });\r\n\r\n      // columns\r\n      var dayColumn = { label: day.day, dataField: day.id, editable: \"true\", width: 100 };\r\n      this.sheetColumns.push(dayColumn);\r\n    });\r\n  }\r\n\r\n  populateSheetShifts(shiftData: any){\r\n    shiftData.forEach((shift: { id: any; shift_name: any; }) => {\r\n      let data = { id: shift.id, shift_id: shift.id, shift_name: shift.shift_name };\r\n      this.dataSource.push(data);\r\n    });\r\n\r\n    console.log(this.dataSource);\r\n  }\r\n\r\n}\r\n","<div class=\"row mb-2\">\r\n    <div class=\"col-md-12\">\r\n        <button class=\"btn btn-secondary float-end nr-standard-font\" routerLink=\"/home/roster/manage-batches\">\r\n            <i class=\"bi bi-arrow-left-right me-2\"></i> Manage Batches\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n\r\n        <div class=\"row mb-3\">\r\n            <div class=\"col-md-12\">\r\n                <button [disabled]=\"isFetchingSheetData\" class=\"btn btn-light border float-end page-refresh-btn\">\r\n                    <i class=\"bi bi-arrow-clockwise\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"overflow-auto\">\r\n            <table class=\"table table-bordered table-sm w-100 page-table\">\r\n                <thead>\r\n                    <th width=\"70\" class=\"min-width-3\">\r\n                        Shifts\r\n                    </th>\r\n                    <th *ngFor=\"let date of sheetDays\" width=\"50\" class=\"min-width-2\">\r\n                        {{date.toDate().toISOString().slice(0, 10)}}\r\n                    </th>\r\n                </thead>\r\n                <tbody>\r\n\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<!-- connection error prompt component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ChartsModule } from 'ng2-charts';\r\n\r\nimport { ModuleUtilitiesModule } from 'projects/personal/src/app/components/module-utilities/module-utilities.module';\r\nimport { StaffWindowsModule } from '../../select-windows/staff-windows/staff-windows.module';\r\n\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { AllRosterComponent } from './all-roster/all-roster.component';\r\nimport { NewRosterComponent } from './new-roster/new-roster.component';\r\nimport { ViewRosterComponent } from './view-roster/view-roster.component';\r\nimport { RosterSheetComponent } from './roster-sheet/roster-sheet.component';\r\nimport { ShiftsComponent } from './shifts/shifts.component';\r\nimport { AddShiftComponent } from './add-shift/add-shift.component';\r\nimport { EditShiftComponent } from './edit-shift/edit-shift.component';\r\nimport { ManagePersonnelComponent } from './manage-personnel/manage-personnel.component';\r\nimport { EditPersonnelComponent } from './edit-personnel/edit-personnel.component';\r\nimport { ManageBatchesComponent } from './manage-batches/manage-batches.component';\r\nimport { AddBatchComponent } from './add-batch/add-batch.component';\r\nimport { EditBatchComponent } from './edit-batch/edit-batch.component';\r\nimport { AddPersonnelComponent } from './add-personnel/add-personnel.component';\r\nimport { PersonnelFormComponent } from './personnel-form/personnel-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    SettingsComponent,\r\n    AllRosterComponent,\r\n    NewRosterComponent,\r\n    ViewRosterComponent,\r\n    RosterSheetComponent,\r\n    ShiftsComponent,\r\n    AddShiftComponent,\r\n    EditShiftComponent,\r\n    ManagePersonnelComponent,\r\n    EditPersonnelComponent,\r\n    ManageBatchesComponent,\r\n    AddBatchComponent,\r\n    EditBatchComponent,\r\n    AddPersonnelComponent,\r\n    PersonnelFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ChartsModule,\r\n    ModuleUtilitiesModule,\r\n    StaffWindowsModule\r\n  ]\r\n})\r\nexport class RosterModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>settings works!</p>\r\n","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { AddShiftComponent } from '../add-shift/add-shift.component'\r\nimport { EditShiftComponent } from '../edit-shift/edit-shift.component'\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\nimport { DeleteModalComponent } from 'projects/personal/src/app/components/module-utilities/delete-modal/delete-modal.component'\r\n\r\nimport { RosterApiService } from 'projects/restaurant/src/app/services/modules/roster-api/roster-api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-shifts',\r\n  templateUrl: './shifts.component.html',\r\n  styleUrls: ['./shifts.component.scss']\r\n})\r\nexport class ShiftsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private rosterApi: RosterApiService\r\n  ) { }\r\n\r\n  @ViewChild('addShiftComponentReference', { read: AddShiftComponent, static: false }) addShift!: AddShiftComponent;\r\n  @ViewChild('editShiftComponentReference', { read: EditShiftComponent, static: false }) editShift!: EditShiftComponent;\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n  @ViewChild('deleteModalComponentReference', { read: DeleteModalComponent, static: false }) deleteModal!: DeleteModalComponent;\r\n\r\n  shiftsGridData: any[] = [];\r\n\r\n  isFetchingGridData = false;\r\n\r\n  deleteId: any;\r\n\r\n  ngOnInit(): void {\r\n    this.getRosterShift();\r\n  }\r\n\r\n  getRosterShift(){\r\n    this.isFetchingGridData = true;\r\n\r\n    this.rosterApi.getRosterShift()\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.shiftsGridData = res.docs;\r\n          this.isFetchingGridData = false;\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isFetchingGridData = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  createShift(data: any){\r\n    console.log(data);\r\n    this.addShift.isSaving = true;\r\n\r\n    this.rosterApi.createShift(data)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n\r\n          if(res.id){\r\n            this.getRosterShift();\r\n            this.addShift.isSaving = false;\r\n            this.addShift.dismissButton.nativeElement.click();\r\n            this.addShift.resetForm();\r\n          }\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.addShift.isSaving = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  updateShift(data: any){\r\n    console.log(data);\r\n    this.editShift.isSaving = true;\r\n\r\n    this.rosterApi.updateShift(data.id, data.shift)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n\r\n          this.getRosterShift();\r\n          this.editShift.isSaving = false;\r\n          this.editShift.dismissButton.nativeElement.click();\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.editShift.isSaving = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  deleteShift(){\r\n    console.log(this.deleteId);\r\n\r\n    this.rosterApi.deleteShift(this.deleteId)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.getRosterShift();\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  openEditShift(data: any){\r\n    console.log(data);\r\n    this.editShift.openModal(data);\r\n  }\r\n\r\n  confirmDelete(id: any){\r\n    this.deleteId = id;\r\n    this.deleteModal.openModal();\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n\r\n        <div class=\"overflow-auto\">\r\n            <table class=\"table table-bordered table-sm w-100 page-table\">\r\n                <thead>\r\n                    <tr class=\"bg-light\">\r\n                        <th width=\"45%\" class=\"min-width-3\">Shift Name</th>\r\n                        <th width=\"20%\" class=\"min-width-2\">Start Time</th>\r\n                        <th width=\"20%\" class=\"min-width-2\">End Time</th>\r\n                        <th width=\"15%\" class=\"p-0 min-width-2\">\r\n                            <button class=\"btn btn-secondary btn-sm w-100\" (click)=\"addShift.openModal()\">\r\n                                <i class=\"bi bi-plus\"></i>\r\n                            </button>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let data of shiftsGridData; index as i\">\r\n                        <td>{{data?.data().shift_name}}</td>\r\n                        <td>{{data?.data().start_time}}</td>\r\n                        <td>{{data?.data().end_time}}</td>\r\n                        <td class=\"p-0\">\r\n                            <button class=\"btn btn-sm border w-50\" (click)=\"openEditShift(data)\"><i class=\"bi bi-pen\"></i></button>\r\n                            <button class=\"btn btn-sm border w-50\" (click)=\"confirmDelete(data.id)\"><i class=\"bi bi-trash\"></i></button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr *ngIf=\"isFetchingGridData\" class=\"text-center\">\r\n                        <td colspan=\"4\">\r\n                            <div class=\"spinner-grow spinner-grow-sm m-2\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<!-- add and edit shift modal components -->\r\n\r\n<app-add-shift #addShiftComponentReference (saveShiftEvent)=\"createShift($event)\"></app-add-shift>\r\n\r\n<app-edit-shift #editShiftComponentReference (saveShiftEvent)=\"updateShift($event)\"></app-edit-shift>\r\n\r\n<!-- connection error toast component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n\r\n<!-- delete confirmation modal component -->\r\n\r\n<app-delete-modal #deleteModalComponentReference (confirmEvent)=\"deleteShift()\"></app-delete-modal>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { ShiftsComponent } from '../shifts/shifts.component';\r\nimport { RosterSheetComponent } from '../roster-sheet/roster-sheet.component';\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\nimport { DeleteModalComponent } from 'projects/personal/src/app/components/module-utilities/delete-modal/delete-modal.component'\r\n\r\nimport { RosterApiService } from 'projects/restaurant/src/app/services/modules/roster-api/roster-api.service';\r\n\r\nimport { Roster } from 'projects/restaurant/src/app/models/modules/roster/roster.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-roster',\r\n  templateUrl: './view-roster.component.html',\r\n  styleUrls: ['./view-roster.component.scss']\r\n})\r\nexport class ViewRosterComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private rosterApi: RosterApiService\r\n  ) { }\r\n\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n  @ViewChild('deleteModalComponentReference', { read: DeleteModalComponent, static: false }) deleteModal!: DeleteModalComponent;\r\n  @ViewChild('rosterSheetComponentReference', { read: RosterSheetComponent, static: false }) rosterSheet!: RosterSheetComponent;\r\n  @ViewChild('shiftsComponentReference', { read: ShiftsComponent, static: false }) shifts!: ShiftsComponent;\r\n\r\n  navHeading: any[] = [\r\n    { text: \"All Roster\", url: \"/home/roster/all-roster\" },\r\n    { text: \"View Roster\", url: \"/home/roster/view-roster\" },\r\n  ];\r\n\r\n  rosterForm: FormGroup = new FormGroup({});\r\n  rosterFormData: any;\r\n\r\n  isRosterLoading: boolean = false;\r\n  isRosterSaving: boolean = false;\r\n  isRosterDeleting: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.initRosterForm();\r\n    this.getRoster();\r\n  }\r\n\r\n  initRosterForm(){\r\n    this.rosterForm = new FormGroup({\r\n      rosterCode: new FormControl(''),\r\n      rosterName: new FormControl(''),\r\n      fromDate: new FormControl(''),\r\n      toDate: new FormControl(''),\r\n    })\r\n  }\r\n\r\n  getRoster(){\r\n    this.isRosterLoading = true;\r\n\r\n    this.rosterApi.getRoster()\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.rosterFormData = res;\r\n\r\n          this.rosterForm.controls.rosterCode.setValue(this.rosterFormData.data().roster_code);\r\n          this.rosterForm.controls.rosterName.setValue(this.rosterFormData.data().roster_name);\r\n          this.rosterForm.controls.fromDate.setValue(this.rosterFormData.data().from_date);\r\n          this.rosterForm.controls.toDate.setValue(this.rosterFormData.data().to_date);\r\n\r\n          this.isRosterLoading = false;\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isRosterLoading = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  updateRoster(){\r\n    let data = {\r\n      roster_name: this.rosterForm.controls.rosterName.value,\r\n      roster_code: this.rosterForm.controls.rosterCode.value,\r\n      from_date: this.rosterForm.controls.fromDate.value,\r\n      to_date: this.rosterForm.controls.toDate.value,\r\n    }\r\n\r\n    this.isRosterSaving = true;\r\n\r\n    this.rosterApi.updateRoster(data)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.isRosterSaving = false;\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isRosterSaving = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n\r\n    console.log(data);\r\n\r\n    // TODO:\r\n    // this.rosterSheet.postSheetData();\r\n  }\r\n\r\n  confirmDelete(){\r\n    this.deleteModal.openModal();\r\n  }\r\n\r\n  deleteOrder(){\r\n    this.isRosterDeleting = true;\r\n\r\n    this.rosterApi.deleteRoster()\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.isRosterDeleting = false;\r\n          this.router.navigateByUrl('/home/roster/all-roster');\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isRosterDeleting = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  onPrint(){\r\n    console.log(\"lets start printing...\");\r\n  }\r\n\r\n}\r\n","<app-module-topnav [headings]=\"navHeading\"></app-module-topnav>\r\n\r\n<div class=\"container\">\r\n\r\n    <form class=\"page-form\" [formGroup]=\"rosterForm\" (ngSubmit)=\"updateRoster()\">\r\n\r\n        <div class=\"row page-form\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <h4>Roster Details</h4>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n\r\n                <div class=\"row mb-1\">\r\n                    <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Roster ID :</label></div>\r\n                    <div class=\"col-md-8\">\r\n                        <input formControlName=\"rosterCode\" class=\"form-control form-control-sm w-100\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-1\">\r\n                    <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Roster Name :</label></div>\r\n                    <div class=\"col-md-8\">\r\n                        <input formControlName=\"rosterName\" class=\"form-control form-control-sm w-100\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-1\">\r\n                    <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Date From :</label></div>\r\n                    <div class=\"col-md-8\">\r\n                        <input type=\"date\" formControlName=\"fromDate\" class=\"form-control form-control-sm w-100\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-1\">\r\n                    <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Date To :</label></div>\r\n                    <div class=\"col-md-8\">\r\n                        <input type=\"date\" formControlName=\"toDate\" class=\"form-control form-control-sm w-100\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"!isRosterLoading\" class=\"row mt-3 page-form\">\r\n                    <div class=\"col-md-12\">\r\n                        <button type=\"button\" class=\"btn btn-secondary btn-sm float-end ms-1 page-form-btn\" routerLink=\"/home/roster/all-roster\">Cancel</button>\r\n                        <button [disabled]=\"isRosterDeleting\" type=\"button\" class=\"btn btn-secondary btn-sm float-end ms-1 page-form-btn\" (click)=\"confirmDelete()\">Delete</button>\r\n                        <button [disabled]=\"isRosterSaving\" type=\"submit\" class=\"btn btn-secondary btn-sm float-end ms-1 page-form-btn\">Save</button>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"isRosterLoading\" class=\"row mt-3 page-form\">\r\n                    <div class=\"col-md-12\">\r\n                        <button type=\"button\" class=\"btn btn-sm float-end ms-1 btn-light page-form-btn\">\r\n                            <div class=\"spinner-grow spinner-grow-sm\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n\r\n                <!-- shifts component -->\r\n\r\n                <app-shifts #shiftsComponentReference></app-shifts>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n    <hr class=\"top-divider\" />\r\n    <hr class=\"bottom-divider\" />\r\n\r\n    <!-- roster sheet component -->\r\n\r\n    <app-roster-sheet #rosterSheetComponentReference></app-roster-sheet>\r\n\r\n</div>\r\n\r\n<!-- connection error prompt component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { RosterPageComponent } from './roster-page.component';\r\nimport { DashboardComponent } from '../../../components/modules/roster/dashboard/dashboard.component';\r\nimport { AllRosterComponent } from '../../../components/modules/roster/all-roster/all-roster.component';\r\nimport { ViewRosterComponent } from '../../../components/modules/roster/view-roster/view-roster.component';\r\nimport { ManageBatchesComponent } from '../../../components/modules/roster/manage-batches/manage-batches.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: RosterPageComponent,\r\n    children: [\r\n      { path: \"\", component: DashboardComponent },\r\n      { path: \"dashboard\", component: DashboardComponent },\r\n      { path: \"all-roster\", component: AllRosterComponent },\r\n      { path: \"view-roster\", component: ViewRosterComponent },\r\n      { path: \"manage-batches\", component: ManageBatchesComponent },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RosterPageRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-roster-page',\r\n  templateUrl: './roster-page.component.html',\r\n  styleUrls: ['./roster-page.component.scss']\r\n})\r\nexport class RosterPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  navLinks: any[] = [\r\n    { text: \"All Roster\", url: \"/home/roster/all-roster\", icon: \"bi bi-list-ul\" },\r\n  ]\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-main-navbar [navBrand]=\"'nR Restaurant'\" [source]=\"'Restaurant'\"></app-main-navbar>\r\n\r\n<div id=\"wrapper\">\r\n\r\n    <app-module-sidenav [navLinks]=\"navLinks\" [heading]=\"'Roster'\"></app-module-sidenav>\r\n\r\n    <div id=\"content-wrapper\" class=\"d-flex flex-column\">\r\n        <div id=\"content\">\r\n\r\n            <router-outlet></router-outlet>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RosterPageRoutingModule } from './roster-page-routing.module';\r\nimport { MainNavbarModule } from 'projects/application/src/app/components/main-navbar/main-navbar.module';\r\nimport { ModuleUtilitiesModule } from 'projects/personal/src/app/components/module-utilities/module-utilities.module';\r\nimport { RosterModule } from '../../../components/modules/roster/roster.module';\r\n\r\nimport { RosterPageComponent } from './roster-page.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RosterPageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RosterPageRoutingModule,\r\n    MainNavbarModule,\r\n    ModuleUtilitiesModule,\r\n    RosterModule,\r\n  ]\r\n})\r\nexport class RosterPageModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}