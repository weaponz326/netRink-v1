{"version":3,"file":"projects_restaurant_src_app_pages_modules_customers-page_customers-page_module_ts.js","mappings":"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","sources":["./node_modules/firebase/firestore/dist/index.esm.js","./projects/restaurant/src/app/components/modules/customers/all-customers/all-customers.component.ts","./projects/restaurant/src/app/components/modules/customers/all-customers/all-customers.component.html","./projects/restaurant/src/app/components/modules/customers/customer-form/customer-form.component.ts","./projects/restaurant/src/app/components/modules/customers/customer-form/customer-form.component.html","./projects/restaurant/src/app/components/modules/customers/customers.module.ts","./projects/restaurant/src/app/components/modules/customers/dashboard/dashboard.component.ts","./projects/restaurant/src/app/components/modules/customers/dashboard/dashboard.component.html","./projects/restaurant/src/app/components/modules/customers/new-customer/new-customer.component.ts","./projects/restaurant/src/app/components/modules/customers/new-customer/new-customer.component.html","./projects/restaurant/src/app/components/modules/customers/settings/settings.component.ts","./projects/restaurant/src/app/components/modules/customers/settings/settings.component.html","./projects/restaurant/src/app/components/modules/customers/view-customer/view-customer.component.ts","./projects/restaurant/src/app/components/modules/customers/view-customer/view-customer.component.html","./projects/restaurant/src/app/guards/modules/customers/view-customer.guard.ts","./projects/restaurant/src/app/pages/modules/customers-page/customers-page-routing.module.ts","./projects/restaurant/src/app/pages/modules/customers-page/customers-page.component.ts","./projects/restaurant/src/app/pages/modules/customers-page/customers-page.component.html","./projects/restaurant/src/app/pages/modules/customers-page/customers-page.module.ts","./projects/restaurant/src/app/services/modules/customers-api/customers-api.service.ts","./projects/restaurant/src/app/services/printing/customers-print/customers-print.service.ts"],"sourcesContent":["export * from '@firebase/firestore';\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\n\r\nimport { CustomersApiService } from 'projects/restaurant/src/app/services/modules/customers-api/customers-api.service';\r\nimport { CustomersPrintService } from 'projects/restaurant/src/app/services/printing/customers-print/customers-print.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-all-customers',\r\n  templateUrl: './all-customers.component.html',\r\n  styleUrls: ['./all-customers.component.scss']\r\n})\r\nexport class AllCustomersComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private customersApi: CustomersApiService,\r\n    private customersPrint: CustomersPrintService,\r\n  ) { }\r\n\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n\r\n  navHeading: any[] = [\r\n    { text: \"All Customers\", url: \"/home/customers/all-customers\" },\r\n  ];\r\n\r\n  customersGridData: any[] = [];\r\n\r\n  isFetchingGridData: boolean =  false;\r\n  isDataAvailable: boolean =  true;\r\n\r\n  firstInResponse: any = [];\r\n  lastInResponse: any = [];\r\n  nextStartAfter: any = [];\r\n  prevStartAt: any = [];\r\n  pageNumber = 0;\r\n  disableNext: boolean = true;\r\n  disablePrev: boolean = true;\r\n\r\n  sortParams = {\r\n    field: \"created_at\",\r\n    direction: \"desc\"\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAccountCustomer();\r\n  }\r\n\r\n  getAccountCustomer(){\r\n    this.isFetchingGridData = true;\r\n\r\n    this.customersApi.getAccountCustomer(this.sortParams, 20)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.customersGridData = res.docs;\r\n\r\n          this.isFetchingGridData = false;\r\n          this.prevStartAt = this.firstInResponse;\r\n          this.nextStartAfter = res.docs[res.docs.length - 1];\r\n          this.firstInResponse = res.docs[0];\r\n          this.pageNumber = 1;\r\n\r\n          if (!res.docs.length) this.isDataAvailable = false;\r\n          else this.isDataAvailable = true;\r\n\r\n          if (!res.docs.length || res.docs.length < 20){\r\n            this.disableNext = true;\r\n            this.disablePrev = true;\r\n          }\r\n          else{\r\n            this.disableNext = false;\r\n            this.disablePrev = true;\r\n          }\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isFetchingGridData = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  nextPage(e: any){\r\n    e.preventDefault();\r\n    this.isFetchingGridData = true;\r\n\r\n    this.customersApi.getAccountCustomerNext(this.sortParams, 20, this.nextStartAfter)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.customersGridData = res.docs;\r\n\r\n          this.isFetchingGridData = false;\r\n          this.prevStartAt = this.firstInResponse;\r\n          this.nextStartAfter = res.docs[res.docs.length - 1];\r\n          this.firstInResponse = res.docs[0];\r\n          this.pageNumber++;\r\n\r\n          if (res.docs.length < 20){\r\n            this.disableNext = true;\r\n            this.disablePrev = false;\r\n          }\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isFetchingGridData = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  previousPage(e: any){\r\n    e.preventDefault();\r\n    this.isFetchingGridData = true;\r\n\r\n    this.customersApi.getAccountCustomerPrev(this.sortParams, 20, this.prevStartAt)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.customersGridData = res.docs;\r\n\r\n          this.isFetchingGridData = false;\r\n          if (!res.docs.length) this.isDataAvailable = false;\r\n\r\n          this.prevStartAt = this.firstInResponse;\r\n          this.nextStartAfter = res.docs[res.docs.length - 1];\r\n          this.firstInResponse = res.docs[0];\r\n          this.pageNumber--;\r\n\r\n          if (this.pageNumber == 1){\r\n            this.disableNext = false;\r\n            this.disablePrev = true;\r\n          }\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isFetchingGridData = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  sortTable(field: any, direction: any){\r\n    this.sortParams.field = field;\r\n    this.sortParams.direction = direction;\r\n\r\n    this.getAccountCustomer();\r\n  }\r\n\r\n  viewCustomer(customerId: any){\r\n    console.log(customerId);\r\n\r\n    sessionStorage.setItem('restaurant_customer_id', customerId);\r\n    this.router.navigateByUrl('/home/customers/view-customer');\r\n  }\r\n\r\n  onPrint(){\r\n    console.log(\"lets start printing...\");\r\n    this.customersPrint.printAllCustomers();\r\n  }\r\n\r\n}\r\n","<app-module-topnav [headings]=\"navHeading\" [showPrint]=\"true\" (print)=\"onPrint()\"></app-module-topnav>\r\n\r\n<div class=\"container\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-8\">\r\n\r\n            <div class=\"row mb-3\">\r\n                <div class=\"col-md-12\">\r\n                    <button class=\"btn btn-secondary page-add-btn\" routerLink=\"/home/customers/new-customer\">New Customer</button>\r\n                    <button [disabled]=\"isFetchingGridData\" class=\"btn btn-light border float-end page-refresh-btn\" (click)=\"getAccountCustomer()\">\r\n                        <i class=\"bi bi-arrow-clockwise\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"overflow-auto\">\r\n                <table class=\"table table-bordered table-sm w-100 page-table\">\r\n                    <thead>\r\n                        <tr class=\"bg-light\">\r\n                            <th width=\"25%\" class=\"min-width-2\">\r\n                                Customer ID\r\n                                <i *ngIf=\"sortParams.field != 'customer_code'\" class=\"bi bi-filter float-end list-pointer\" (click)=\"sortTable('customer_code', 'desc')\"></i>\r\n                                <i *ngIf=\"sortParams.field == 'customer_code' && sortParams.direction == 'desc'\" class=\"bi bi-sort-down float-end list-pointer\" (click)=\"sortTable('customer_code', 'asc')\"></i>\r\n                                <i *ngIf=\"sortParams.field == 'customer_code' && sortParams.direction == 'asc'\" class=\"bi bi-sort-up float-end list-pointer\" (click)=\"sortTable('customer_code', 'desc')\"></i>\r\n                            </th>\r\n                            <th width=\"50%\" class=\"min-width-4\">\r\n                                Customer Name\r\n                                <i *ngIf=\"sortParams.field != 'customer_name'\" class=\"bi bi-filter float-end list-pointer\" (click)=\"sortTable('customer_name', 'desc')\"></i>\r\n                                <i *ngIf=\"sortParams.field == 'customer_name' && sortParams.direction == 'desc'\" class=\"bi bi-sort-down float-end list-pointer\" (click)=\"sortTable('customer_name', 'asc')\"></i>\r\n                                <i *ngIf=\"sortParams.field == 'customer_name' && sortParams.direction == 'asc'\" class=\"bi bi-sort-up float-end list-pointer\" (click)=\"sortTable('customer_name', 'desc')\"></i>\r\n                            </th>\r\n                            <th width=\"25%\" class=\"min-width-2\">\r\n                                Phone No.\r\n                                <i *ngIf=\"sortParams.field != 'phone'\" class=\"bi bi-filter float-end list-pointer\" (click)=\"sortTable('phone', 'desc')\"></i>\r\n                                <i *ngIf=\"sortParams.field == 'phone' && sortParams.direction == 'desc'\" class=\"bi bi-sort-down float-end list-pointer\" (click)=\"sortTable('phone', 'asc')\"></i>\r\n                                <i *ngIf=\"sortParams.field == 'phone' && sortParams.direction == 'asc'\" class=\"bi bi-sort-up float-end list-pointer\" (click)=\"sortTable('phone', 'desc')\"></i>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let data of customersGridData\" (dblclick)=\"viewCustomer(data.id)\" class=\"table-pointer\">\r\n                            <td>{{data?.data().customer_code}}</td>\r\n                            <td>{{data?.data().customer_name}}</td>\r\n                            <td>{{data?.data().phone}}</td>\r\n                        </tr>\r\n                        <tr *ngIf=\"isFetchingGridData\" class=\"text-center\">\r\n                            <td colspan=\"4\">\r\n                                <div class=\"spinner-grow m-4\" role=\"status\">\r\n                                    <span class=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr *ngIf=\"!isDataAvailable && !isFetchingGridData\" class=\"text-center\">\r\n                            <td colspan=\"4\">\r\n                                <p class=\"m-4\">No data available</p>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr class=\"bg-light\">\r\n                            <td colspan=\"3\">\r\n                                <nav class=\"nav-light float-end\" aria-label=\"Page navigation\">\r\n                                    <ul class=\"pagination pagination-sm mb-0 justify-content-end\">\r\n                                        <li class=\"page-item\" [ngClass]=\"disablePrev ? 'disabled' : ''\">\r\n                                            <a class=\"page-link\" href=\"#\" aria-label=\"First\" (click)=\"previousPage($event)\">\r\n                                                <i class=\"bi bi-caret-left-fill\"></i>\r\n                                            </a>\r\n                                        </li>\r\n                                        <li class=\"page-item\">\r\n                                            <a class=\"page-link\" href=\"#\" aria-label=\"Current\" (click)=\"$event.preventDefault()\">\r\n                                                {{pageNumber}}\r\n                                            </a>\r\n                                        </li>\r\n                                        <li class=\"page-item\" [ngClass]=\"disableNext ? 'disabled' : ''\">\r\n                                            <a class=\"page-link\" href=\"#\" aria-label=\"Last\" (click)=\"nextPage($event)\">\r\n                                                <i class=\"bi bi-caret-right-fill\"></i>\r\n                                            </a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </nav>\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- connection error prompt component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-customer-form',\r\n  templateUrl: './customer-form.component.html',\r\n  styleUrls: ['./customer-form.component.scss']\r\n})\r\nexport class CustomerFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  customerForm: FormGroup = new FormGroup({});\r\n\r\n  ngOnInit(): void {\r\n    this.initCustomerForm();\r\n  }\r\n\r\n  initCustomerForm(){\r\n    this.customerForm = new FormGroup({\r\n      customerCode: new FormControl(''),\r\n      customerName: new FormControl(''),\r\n      customerType: new FormControl(''),\r\n      phone: new FormControl(''),\r\n      email: new FormControl(''),\r\n      address: new FormControl(''),\r\n      state: new FormControl(''),\r\n      city: new FormControl(''),\r\n      allergies: new FormControl(''),\r\n      preferences: new FormControl(''),\r\n    })\r\n  }\r\n\r\n}\r\n","<form class=\"page-form\" [formGroup]=\"customerForm\">\r\n\r\n    <div class=\"row page-form\">\r\n\r\n        <div class=\"col-md-12\">\r\n            <h4>Customer Details</h4>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Customer ID :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <input formControlName=\"customerCode\" class=\"form-control form-control-sm w-100\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Customer Name :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <input formControlName=\"customerName\" class=\"form-control form-control-sm w-100\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Customer Type :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <select formControlName=\"customerType\" class=\"form-control form-control-sm w-100\">\r\n                        <option>Individual</option>\r\n                        <option>Organization</option>\r\n                        <option>Group</option>\r\n                        <option>Couple</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Allergies :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <textarea formControlName=\"allergies\" class=\"form-control form-control-sm w-100\" rows=\"3\"></textarea>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Preferences :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <textarea formControlName=\"preferences\" class=\"form-control form-control-sm w-100\" rows=\"3\"></textarea>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Phone No. :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <input formControlName=\"phone\" class=\"form-control form-control-sm w-100\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Email :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <input formControlName=\"email\" class=\"form-control form-control-sm w-100\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">Address :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <textarea formControlName=\"address\" class=\"form-control form-control-sm w-100\" rows=\"3\"></textarea>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">State/Region :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <input formControlName=\"state\" class=\"form-control form-control-sm w-100\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-1\">\r\n                <div class=\"col-md-4\"><label class=\"float-md-end float-sm-start mt-1\">City/Town :</label></div>\r\n                <div class=\"col-md-8\">\r\n                    <input formControlName=\"city\" class=\"form-control form-control-sm w-100\">\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <hr />\r\n\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ChartsModule } from 'ng2-charts';\r\n\r\nimport { ModuleUtilitiesModule } from 'projects/personal/src/app/components/module-utilities/module-utilities.module';\r\n\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { AllCustomersComponent } from './all-customers/all-customers.component';\r\nimport { NewCustomerComponent } from './new-customer/new-customer.component';\r\nimport { ViewCustomerComponent } from './view-customer/view-customer.component';\r\nimport { CustomerFormComponent } from './customer-form/customer-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    SettingsComponent,\r\n    AllCustomersComponent,\r\n    NewCustomerComponent,\r\n    ViewCustomerComponent,\r\n    CustomerFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ChartsModule,\r\n    ModuleUtilitiesModule,\r\n  ]\r\n})\r\nexport class CustomersModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { ChartDataSets, ChartOptions } from 'chart.js';\r\nimport { Color, Label, SingleDataSet } from 'ng2-charts';\r\nimport moment from 'moment/moment';\r\n\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\n\r\nimport { CustomersApiService } from 'projects/restaurant/src/app/services/modules/customers-api/customers-api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private customersApi: CustomersApiService) { }\r\n\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n\r\n  navHeading: any[] = [\r\n    { text: \"Dashboard\", url: \"/home/customers/dashboard\" },\r\n  ];\r\n\r\n  weekCustomersData: any;\r\n\r\n  weekCustomersCount: number = 0;\r\n\r\n  customersLineChartData: ChartDataSets[] = [{ data: [0], label: 'Menu Groups' }];\r\n  customersLineChartLabels: Label[] = [\"\"]\r\n\r\n  chartOptions = {};\r\n\r\n  today = moment();\r\n\r\n  ngOnInit(): void {\r\n    this.initChart();\r\n    this.getWeekCustomer();\r\n  }\r\n\r\n  initChart(){\r\n    this.chartOptions = {\r\n      responsive: true,\r\n      scales: {\r\n        yAxes: [{\r\n          min: 0,\r\n          ticks: {\r\n            stepSize: 1,\r\n            beginAtZero: true,\r\n          }\r\n        }]\r\n      }\r\n    };\r\n  }\r\n\r\n  getWeekCustomer(){\r\n    this.customersApi.getWeekCustomer(moment(this.today).add(-1, 'months').toDate(), this.today.toDate())\r\n      .then(\r\n        res => {\r\n          console.log(res);\r\n          this.weekCustomersData = res.docs;\r\n          this.weekCustomersCount = res.docs.length;\r\n\r\n          this.setCustomerChartData();\r\n        },\r\n        err => {\r\n          console.log(err);\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  setCustomerChartData(){\r\n    this.customersLineChartLabels = [];\r\n    for (let i = 7; i > 0; i--) {\r\n      var d = moment(this.today).add(-i, 'days');\r\n      this.customersLineChartLabels.push(d.toDate().toISOString().slice(0, 10));\r\n    }\r\n    console.log(this.customersLineChartLabels);\r\n\r\n    let dataCount: any[] = [];\r\n    for (let i = 7; i > 0; i--) {\r\n      dataCount.push(0);\r\n    }\r\n    console.log(dataCount);\r\n\r\n    this.weekCustomersData.forEach((customer: any) => {\r\n      var customerDate = customer.data().created_at.toDate().toISOString().slice(0, 10);\r\n      for (let i = 7; i > 0; i--){\r\n        if (this.customersLineChartLabels[i] == customerDate){\r\n          dataCount[i]++;\r\n        }\r\n      }\r\n    })\r\n    console.log(dataCount);\r\n    this.customersLineChartData = [{ data: dataCount, label: 'Customers' }];\r\n  }\r\n\r\n}\r\n","<app-module-topnav [headings]=\"navHeading\"></app-module-topnav>\r\n\r\n<div class=\"container\">\r\n\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col-md-3 mb-4\">\r\n            <div class=\"card border-left-secondary shadow h-100 py-2\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"row no-gutters align-items-center\">\r\n                        <div class=\"col mr-2\">\r\n                            <div class=\"text-xs font-weight-bold text-uppercase mb-1\">New Customers this Week</div>\r\n                            <div class=\"h5 mb-0 font-weight-bold text-gray-800\">{{weekCustomersCount}}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col-md-8\">\r\n            <div class=\"card shadow mb-4\">\r\n                <div class=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                    <h6 class=\"m-0 font-weight-bold\">New Customers by Day</h6>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"chart-area\">\r\n                        <canvas baseChart\r\n                            [datasets]=\"customersLineChartData\"\r\n                            [labels]=\"customersLineChartLabels\"\r\n                            [options]=\"chartOptions\"\r\n                            [legend]=\"true\"\r\n                            [chartType]=\"'line'\"\r\n                        ></canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    \r\n</div>\r\n\r\n<!-- connection error prompt component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { serverTimestamp } from 'firebase/firestore';\r\n\r\nimport { CustomerFormComponent } from '../customer-form/customer-form.component';\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\n\r\nimport { CustomersApiService } from 'projects/restaurant/src/app/services/modules/customers-api/customers-api.service';\r\n\r\nimport { Customer } from 'projects/restaurant/src/app/models/modules/customers/customers.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-customer',\r\n  templateUrl: './new-customer.component.html',\r\n  styleUrls: ['./new-customer.component.scss']\r\n})\r\nexport class NewCustomerComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private customersApi: CustomersApiService\r\n  ) { }\r\n\r\n  @ViewChild('customerFormComponentReference', { read: CustomerFormComponent, static: false }) customerForm!: CustomerFormComponent;\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n\r\n  navHeading: any[] = [\r\n    { text: \"New Customer\", url: \"/home/customers/new-customer\" },\r\n  ];\r\n\r\n  isCustomerSaving = false;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createCustomer(){\r\n    console.log('u are saving a new customer');\r\n\r\n    var data: Customer = {\r\n      created_at: serverTimestamp(),\r\n      account: localStorage.getItem('restaurant_id') as string,\r\n      customer_code: this.customerForm.customerForm.controls.customerCode.value,\r\n      customer_name: this.customerForm.customerForm.controls.customerName.value,\r\n      customer_type: this.customerForm.customerForm.controls.customerType.value,\r\n      phone: this.customerForm.customerForm.controls.phone.value,\r\n      email: this.customerForm.customerForm.controls.email.value,\r\n      address: this.customerForm.customerForm.controls.address.value,\r\n      state: this.customerForm.customerForm.controls.state.value,\r\n      city: this.customerForm.customerForm.controls.city.value,\r\n      allergies: this.customerForm.customerForm.controls.allergies.value,\r\n      preferences: this.customerForm.customerForm.controls.preferences.value,\r\n    }\r\n\r\n    console.log(data);\r\n    this.isCustomerSaving = true;\r\n\r\n    this.customersApi.createCustomer(data)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.isCustomerSaving = false;\r\n\r\n          sessionStorage.setItem('restaurant_customer_id', res.id);\r\n          this.router.navigateByUrl('/home/customers/view-customer');\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isCustomerSaving = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n}\r\n","<app-module-topnav [headings]=\"navHeading\"></app-module-topnav>\r\n\r\n<div class=\"container\">\r\n\r\n    <!-- customer page form -->\r\n\r\n    <app-customer-form #customerFormComponentReference></app-customer-form>\r\n\r\n    <div class=\"row page-form\">\r\n        <div class=\"col-md-12\">\r\n            <button type=\"button\" class=\"btn btn-secondary btn-sm float-end ms-1 page-form-btn\" routerLink=\"/home/customers/all-customers\">Cancel</button>\r\n            <button [disabled]=\"isCustomerSaving\" class=\"btn btn-secondary btn-sm float-end ms-1 page-form-btn\" (click)=\"createCustomer()\">Save</button>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- connection error prompt component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>settings works!</p>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { CustomerFormComponent } from '../customer-form/customer-form.component';\r\nimport { ConnectionToastComponent } from 'projects/personal/src/app/components/module-utilities/connection-toast/connection-toast.component'\r\nimport { DeleteModalComponent } from 'projects/personal/src/app/components/module-utilities/delete-modal/delete-modal.component'\r\n\r\nimport { CustomersApiService } from 'projects/restaurant/src/app/services/modules/customers-api/customers-api.service';\r\nimport { CustomersPrintService } from 'projects/restaurant/src/app/services/printing/customers-print/customers-print.service';\r\n\r\nimport { Customer } from 'projects/restaurant/src/app/models/modules/customers/customers.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-customer',\r\n  templateUrl: './view-customer.component.html',\r\n  styleUrls: ['./view-customer.component.scss']\r\n})\r\nexport class ViewCustomerComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private customersApi: CustomersApiService,\r\n    private customersPrint: CustomersPrintService,\r\n  ) { }\r\n\r\n  @ViewChild('customerFormComponentReference', { read: CustomerFormComponent, static: false }) customerForm!: CustomerFormComponent;\r\n  @ViewChild('connectionToastComponentReference', { read: ConnectionToastComponent, static: false }) connectionToast!: ConnectionToastComponent;\r\n  @ViewChild('deleteModalComponentReference', { read: DeleteModalComponent, static: false }) deleteModal!: DeleteModalComponent;\r\n\r\n  navHeading: any[] = [\r\n    { text: \"All Customers\", url: \"/home/customers/all-customers\" },\r\n    { text: \"View Customer\", url: \"/home/customers/view-customer\" },\r\n  ];\r\n\r\n  customerData: any;\r\n\r\n  isCustomerLoading = false;\r\n  isCustomerSaving = false;\r\n  isCustomerDeleting = false;\r\n\r\n  ngOnInit(): void {\r\n    this.getCustomer();\r\n  }\r\n\r\n  getCustomer(){\r\n    this.isCustomerLoading = true;\r\n\r\n    this.customersApi.getCustomer()\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.customerData = res;\r\n          this.isCustomerLoading = false;\r\n\r\n          this.customerForm.customerForm.controls.customerCode.setValue(this.customerData.data().customer_code);\r\n          this.customerForm.customerForm.controls.customerName.setValue(this.customerData.data().customer_name);\r\n          this.customerForm.customerForm.controls.customerType.setValue(this.customerData.data().customer_type);\r\n          this.customerForm.customerForm.controls.phone.setValue(this.customerData.data().phone);\r\n          this.customerForm.customerForm.controls.email.setValue(this.customerData.data().email);\r\n          this.customerForm.customerForm.controls.address.setValue(this.customerData.data().address);\r\n          this.customerForm.customerForm.controls.state.setValue(this.customerData.data().state);\r\n          this.customerForm.customerForm.controls.city.setValue(this.customerData.data().city);\r\n          this.customerForm.customerForm.controls.allergies.setValue(this.customerData.data().allergies);\r\n          this.customerForm.customerForm.controls.preferences.setValue(this.customerData.data().preferences);\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isCustomerLoading = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  updateCustomer(){\r\n    console.log('u are saving a new customer');\r\n\r\n    var data = {\r\n      customer_code: this.customerForm.customerForm.controls.customerCode.value,\r\n      customer_name: this.customerForm.customerForm.controls.customerName.value,\r\n      customer_type: this.customerForm.customerForm.controls.customerType.value,\r\n      phone: this.customerForm.customerForm.controls.phone.value,\r\n      email: this.customerForm.customerForm.controls.email.value,\r\n      address: this.customerForm.customerForm.controls.address.value,\r\n      state: this.customerForm.customerForm.controls.state.value,\r\n      city: this.customerForm.customerForm.controls.city.value,\r\n      allergies: this.customerForm.customerForm.controls.allergies.value,\r\n      preferences: this.customerForm.customerForm.controls.preferences.value,\r\n    }\r\n\r\n    console.log(data);\r\n    this.isCustomerSaving = true;\r\n\r\n    this.customersApi.updateCustomer(data)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.isCustomerSaving = false;\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.isCustomerSaving = false;\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  confirmDelete(){\r\n    this.deleteModal.openModal();\r\n  }\r\n\r\n  deleteCustomer(){\r\n    this.isCustomerDeleting = true;\r\n\r\n    this.customersApi.deleteCustomer()\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.router.navigateByUrl('/home/customers/all-customers');\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          this.connectionToast.openToast();\r\n        }\r\n      )\r\n  }\r\n\r\n  onPrint(){\r\n    console.log(\"lets start printing...\");\r\n    this.customersPrint.printViewCustomer();\r\n  }\r\n\r\n}\r\n","<app-module-topnav [headings]=\"navHeading\"></app-module-topnav>\r\n\r\n<div class=\"container\">\r\n\r\n    <!-- customer page form -->\r\n\r\n    <app-customer-form #customerFormComponentReference></app-customer-form>\r\n\r\n    <div *ngIf=\"!isCustomerLoading\" class=\"row page-form\">\r\n        <div class=\"col-md-12\">\r\n            <button type=\"button\" class=\"btn btn-secondary btn-sm float-end ms-1 page-form-btn\" routerLink=\"/home/customers/all-customers\">Cancel</button>\r\n            <button [disabled]=\"isCustomerDeleting\" type=\"button\" class=\"btn btn-secondary btn-sm float-end ms-1 page-form-btn\" (click)=\"confirmDelete()\">Delete</button>\r\n            <button [disabled]=\"isCustomerSaving\" class=\"btn btn-secondary btn-sm float-end ms-1 page-form-btn\" (click)=\"updateCustomer()\">Save</button>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"isCustomerLoading\" class=\"row page-form\">\r\n        <div class=\"col-md-12\">\r\n            <button type=\"button\" class=\"btn btn-sm float-end ms-1 btn-light page-form-btn\">\r\n                <div class=\"spinner-grow spinner-grow-sm\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- connection error prompt component -->\r\n\r\n<app-connection-toast #connectionToastComponentReference></app-connection-toast>\r\n\r\n<!-- delete confirmation modal component -->\r\n\r\n<app-delete-modal #deleteModalComponentReference (confirmEvent)=\"deleteCustomer()\"></app-delete-modal>\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewCustomerGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n    if (!!sessionStorage.getItem('restaurant_customer_id')){\n      return true;\n    }\n    else{\n      this.router.navigateByUrl('/home/customers');\n      return false;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CustomersPageComponent } from './customers-page.component';\r\nimport { DashboardComponent } from '../../../components/modules/customers/dashboard/dashboard.component';\r\nimport { AllCustomersComponent } from '../../../components/modules/customers/all-customers/all-customers.component';\r\nimport { NewCustomerComponent } from '../../../components/modules/customers/new-customer/new-customer.component';\r\nimport { ViewCustomerComponent } from '../../../components/modules/customers/view-customer/view-customer.component';\r\n\r\nimport { ViewCustomerGuard } from '../../../guards/modules/customers/view-customer.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: CustomersPageComponent,\r\n    children: [\r\n      { path: \"\", component: DashboardComponent },\r\n      { path: \"dashboard\", component: DashboardComponent },\r\n      { path: \"all-customers\", component: AllCustomersComponent },\r\n      { path: \"new-customer\", component: NewCustomerComponent },\r\n      { path: \"view-customer\", component: ViewCustomerComponent, canActivate: [ViewCustomerGuard] }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CustomersPageRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-customers-page',\r\n  templateUrl: './customers-page.component.html',\r\n  styleUrls: ['./customers-page.component.scss']\r\n})\r\nexport class CustomersPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  navLinks: any[] = [\r\n    { text: \"All Customers\", url: \"/home/customers/all-customers\", icon: \"bi bi-list-ul\" },\r\n    { text: \"New Customer\", url: \"/home/customers/new-customer\", icon: \"bi bi-plus-square\" },\r\n  ]\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-main-navbar [navBrand]=\"'nR Restaurant'\" [source]=\"'Restaurant'\"></app-main-navbar>\r\n\r\n<div id=\"wrapper\">\r\n\r\n    <app-module-sidenav [navLinks]=\"navLinks\" [heading]=\"'Customers'\"></app-module-sidenav>\r\n\r\n    <div id=\"content-wrapper\" class=\"d-flex flex-column\">\r\n        <div id=\"content\">\r\n\r\n            <router-outlet></router-outlet>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CustomersPageRoutingModule } from './customers-page-routing.module';\r\nimport { MainNavbarModule } from 'projects/application/src/app/components/main-navbar/main-navbar.module';\r\nimport { ModuleUtilitiesModule } from 'projects/personal/src/app/components/module-utilities/module-utilities.module';\r\nimport { CustomersModule } from '../../../components/modules/customers/customers.module';\r\n\r\nimport { CustomersPageComponent } from './customers-page.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CustomersPageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CustomersPageRoutingModule,\r\n    MainNavbarModule,\r\n    ModuleUtilitiesModule,\r\n    CustomersModule,\r\n  ]\r\n})\r\nexport class CustomersPageModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomersApiService {\r\n\r\n  constructor(\r\n    private afs: AngularFirestore,\r\n  ) { }\r\n\r\n  customerRef = this.afs.collection('restaurant/module_customers/restaurant_customer');\r\n\r\n  // customers\r\n\r\n  createCustomer(customer: any){\r\n    return this.customerRef.add(customer);\r\n  }\r\n\r\n  getCustomer(){\r\n    return this.customerRef.doc(String(sessionStorage.getItem('restaurant_customer_id'))).ref.get();\r\n  }\r\n\r\n  updateCustomer(customer: any){\r\n    return this.customerRef.doc(String(sessionStorage.getItem('restaurant_customer_id'))).update(customer);\r\n  }\r\n\r\n  deleteCustomer(){\r\n    return this.customerRef.doc(String(sessionStorage.getItem('restaurant_customer_id'))).delete();\r\n  }\r\n\r\n  getAccountCustomer(sorting: any, pageSize: any){\r\n    return this.customerRef.ref\r\n      .where(\"account\", \"==\", localStorage.getItem('restaurant_id'))\r\n      .orderBy(sorting?.field, sorting?.direction)\r\n      .limit(pageSize)\r\n      .get();\r\n  }\r\n\r\n  getAccountCustomerNext(sorting: any, pageSize: any, pageStart: any){\r\n    return this.customerRef.ref\r\n      .where(\"account\", \"==\", localStorage.getItem('restaurant_id'))\r\n      .orderBy(sorting?.field, sorting?.direction)\r\n      .startAfter(pageStart)\r\n      .limit(pageSize)\r\n      .get();\r\n  }\r\n\r\n  getAccountCustomerPrev(sorting: any, pageSize: any, pageStart: any){\r\n    return this.customerRef.ref\r\n      .where(\"account\", \"==\", localStorage.getItem('restaurant_id'))\r\n      .orderBy(sorting?.field, sorting?.direction)\r\n      .startAt(pageStart)\r\n      .limit(pageSize)\r\n      .get();\r\n  }\r\n\r\n  getAllAccountCustomer(){\r\n    return this.customerRef.ref\r\n      .where(\"account\", \"==\", localStorage.getItem('restaurant_id'))\r\n      .orderBy(\"created_by\" ,\"desc\")\r\n      .get();\r\n  }\r\n\r\n  // dashboard\r\n\r\n  getWeekCustomer(startDate: any, endDate: any){\r\n    return this.customerRef.ref\r\n      .where(\"account\", \"==\", localStorage.getItem('restaurant_id'))\r\n      .where(\"created_at\", \"<\", startDate).where(\"created_at\", \">\", endDate)\r\n      .get();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { PdfPrintService } from 'projects/personal/src/app/services/pdf-print/pdf-print.service';\r\nimport { CustomersApiService } from 'projects/restaurant/src/app/services/modules/customers-api/customers-api.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomersPrintService {\r\n\r\n  constructor(\r\n    private pdfPrint: PdfPrintService,\r\n    private customersApi: CustomersApiService\r\n  ) { }\r\n\r\n  // all customers\r\n\r\n  async printAllCustomers(){\r\n    const customersGridData = await this.customersApi.getAllAccountCustomer();\r\n\r\n    var body = [['Customer ID', 'Customer Name', 'Phone No.']];\r\n\r\n    for (let data of customersGridData.docs){\r\n      var row = [];\r\n      let rowData: any = data.data();\r\n      row.push(rowData.customer_code);\r\n      row.push(rowData.customer_name);\r\n      row.push(rowData.phone);\r\n\r\n      body.push(row);\r\n    }\r\n\r\n    let content = [\r\n      {\r\n        layout: 'lightHorizontalLines',\r\n        table: {\r\n          headerRows: 1,\r\n          widths: ['25%', '50%', '25%'],\r\n          body: body\r\n        }\r\n      }\r\n    ]\r\n\r\n    this.pdfPrint.openPdf(content);\r\n  }\r\n\r\n  // view customer\r\n\r\n  async printViewCustomer(){\r\n    const customerFormData = await this.customersApi.getCustomer();\r\n\r\n    let formData: any = customerFormData.data();\r\n\r\n    let content = [\r\n      {\r\n        columns: [\r\n          [\r\n            { text: 'Customer Code: ' + formData.customer_code },\r\n            { text: 'Customer Name: ' + formData.customer_name },\r\n            { text: 'Customer Type: ' + formData.customer_type },\r\n            { text: 'Allergies: ' + formData.allergies },\r\n            { text: 'Preferences: ' + formData.preferences },\r\n            { text: 'Phone No.: ' + formData.phone },\r\n            { text: 'Email: ' + formData.email },\r\n            { text: 'Address: ' + formData.address },\r\n            { text: 'state: ' + formData.state },\r\n            { text: 'city: ' + formData.city },\r\n          ],\r\n        ]\r\n      },\r\n    ]\r\n\r\n    this.pdfPrint.openPdf(content);\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}