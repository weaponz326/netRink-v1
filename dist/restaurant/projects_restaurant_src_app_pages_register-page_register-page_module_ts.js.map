{"version":3,"file":"projects_restaurant_src_app_pages_register-page_register-page_module_ts.js","mappings":"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","sources":["./projects/restaurant/src/app/components/register-forms/register-form/register-form.component.ts","./projects/restaurant/src/app/components/register-forms/register-form/register-form.component.html","./projects/restaurant/src/app/components/register-forms/register-forms.module.ts","./projects/restaurant/src/app/pages/register-page/register-page-routing.module.ts","./projects/restaurant/src/app/pages/register-page/register-page.component.ts","./projects/restaurant/src/app/pages/register-page/register-page.component.html","./projects/restaurant/src/app/pages/register-page/register-page.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { serverTimestamp } from 'firebase/firestore';\r\n\r\nimport { UserApiService } from 'projects/personal/src/app/services/user/user-api/user-api.service';\r\nimport { AccountApiService } from '../../../services/account-api/account-api.service';\r\nimport { AdminApiService } from '../../../services/modules/admin-api/admin-api.service';\r\nimport { SettingsApiService } from '../../../services/modules/settings-api/settings-api.service';\r\n\r\nimport { Account } from '../../../models/account/account.model';\r\nimport { AccountUser, UserAccess } from '../../../models/modules/admin/admin.model';\r\nimport { ExtendedProfile, Subscription } from '../../../models/modules/settings/settings.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register-form',\r\n  templateUrl: './register-form.component.html',\r\n  styleUrls: ['./register-form.component.scss']\r\n})\r\nexport class RegisterFormComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private userApi: UserApiService,\r\n    private accountApi: AccountApiService,\r\n    private adminApi: AdminApiService,\r\n    private settingsApi: SettingsApiService,\r\n  ) { }\r\n\r\n  accountForm = new FormGroup({\r\n    name: new FormControl('', Validators.required),\r\n    location: new FormControl('', Validators.required),\r\n    about: new FormControl('', Validators.required),\r\n  })\r\n\r\n  thisUser: any;\r\n\r\n  saved: boolean = false;\r\n  isSending: boolean = false;\r\n  showPrompt: boolean = false;\r\n\r\n  nameErrors: any;\r\n  locErrors: any;\r\n  abtErrors: any;\r\n\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n  }\r\n\r\n  getUser(){\r\n    this.userApi.getUser()\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.thisUser = res.data();\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n        }\r\n      )\r\n  }\r\n\r\n  onSubmit(){\r\n    let accountData: Account = {\r\n      created_at: serverTimestamp(),\r\n      name: this.accountForm.controls.name.value,\r\n      location: this.accountForm.controls.location.value,\r\n      about: this.accountForm.controls.about.value,\r\n      created_by: localStorage.getItem('personal_id') as string,\r\n      logo: \"\"\r\n    }\r\n\r\n    this.saved = true;\r\n\r\n    if (this.accountForm.valid){\r\n      this.isSending = true;\r\n\r\n      this.accountApi.createAccount(accountData)\r\n        .then(\r\n          (res: any) => {\r\n            console.log(res);\r\n\r\n            localStorage.setItem('restaurant_id', res.id);\r\n            this.showPrompt = true;\r\n            this.isSending = false;\r\n\r\n            this.createAccountUser(accountData);\r\n            this.createExtendedProfile();\r\n            this.createSubscription();\r\n          },\r\n          (err: any) => {\r\n            console.log(err);\r\n            this.isSending = false;\r\n          }\r\n        )\r\n    }\r\n    else{\r\n      console.log(\"form is invalid\");\r\n    }\r\n\r\n    console.log(this.accountForm.value);\r\n  }\r\n\r\n  createAccountUser(account: any){\r\n    let userData: AccountUser = {\r\n      created_at: serverTimestamp(),\r\n      user: {\r\n        id: localStorage.getItem('personal_id') as string,\r\n        data: this.thisUser,\r\n      },\r\n      access_level: \"Admin\",\r\n      account: {\r\n        id: localStorage.getItem('restaurant_id') as string,\r\n        data: account,\r\n      }\r\n    }\r\n\r\n    console.log(userData);\r\n\r\n    this.adminApi.createAccountUser(userData)\r\n      .then(\r\n        (res: any) => {\r\n          console.log(res);\r\n          sessionStorage.setItem('restaurant_account_user_id', res.id)\r\n          this.createUserAccess(res.id);\r\n        },\r\n        (err: any) => {\r\n          console.log(err)\r\n        }\r\n      )\r\n  }\r\n\r\n  createUserAccess(accountUserId: any){\r\n    let accessData: UserAccess = {\r\n      admin_access: true,\r\n      customers_access: true,\r\n      deliveries_access: true,\r\n      kitchen_stock_access: true,\r\n      menu_access: true,\r\n      orders_access: true,\r\n      payments_access: true,\r\n      portal_access: true,\r\n      roster_access: true,\r\n      settings_access: true,\r\n      staff_access: true,\r\n      reservations_access: true,\r\n      tables_access: true,\r\n    }\r\n\r\n    this.adminApi.createUserAccess(accountUserId, accessData)\r\n      .then(\r\n        (res: any) => console.log(res),\r\n        (err: any) => console.log(err)\r\n      )\r\n  }\r\n\r\n  createExtendedProfile(){\r\n    let data: ExtendedProfile = {\r\n      email: \"\",\r\n      phone: \"\",\r\n      address: \"\",\r\n      country: \"\",\r\n      state: \"\",\r\n      city: \"\",\r\n    }\r\n\r\n    this.settingsApi.createExtendedProfile(data)\r\n      .then(\r\n        (res: any) => console.log(res),\r\n        (err: any) => console.log(err)\r\n      )\r\n  }\r\n\r\n  createSubscription(){\r\n    let data: Subscription = {\r\n      subscription_type: \"Individual\",\r\n      billing_frequency: \"\",\r\n      number_users: 1,\r\n      first_name: this.thisUser.first_name,\r\n      last_name: this.thisUser.last_name,\r\n      email: this.thisUser.email,\r\n    }\r\n\r\n    this.settingsApi.createSubscription(data)\r\n      .then(\r\n        (res: any) => console.log(res),\r\n        (err: any) => console.log(err)\r\n      )\r\n  }\r\n\r\n  onAddressChange(address: any) {\r\n    this.accountForm.controls.location.setValue(address.formatted_address);\r\n    console.log(address);\r\n  }\r\n\r\n}\r\n","<div class=\"bg-light\">\r\n    <div class=\"container pt-5\">\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-5 mx-auto vh-100\">\r\n\r\n                <mat-card class=\"my-auto\">\r\n                    <mat-card-content>\r\n\r\n                        <app-form-header [formHeading]=\"'Restaurant register'\"></app-form-header>\r\n\r\n                        <form *ngIf=\"!showPrompt\" [formGroup]=\"accountForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n                            <div class=\"row mb-3\">\r\n                                <div class=\"col\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                        <mat-label>Restaurant Name</mat-label>\r\n                                        <input matInput type=\"text\" formControlName=\"name\" required>\r\n                                    </mat-form-field>\r\n                                    <mat-error *ngIf=\"saved && accountForm.controls.name.errors\">Restaurant Name is required</mat-error>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row mb-3\">\r\n                                <div class=\"col\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                        <mat-label>Location</mat-label>\r\n                                        <input matInput type=\"text\" formControlName=\"location\" required ngx-google-places-autocomplete #placesRef=\"ngx-places\" (onAddressChange)=\"onAddressChange($event)\">\r\n                                    </mat-form-field>\r\n                                    <mat-error *ngIf=\"saved && accountForm.controls.location.errors\">Location is required</mat-error>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row mb-3\">\r\n                                <div class=\"col\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                        <mat-label>About</mat-label>\r\n                                        <textarea matInput rows=\"3\" formControlName=\"about\" required maxlength=\"250\"></textarea>\r\n                                    </mat-form-field>\r\n                                    <mat-hint>Not more than 250 characters</mat-hint>\r\n                                    <mat-error *ngIf=\"saved && accountForm.controls.about.errors\">About is required</mat-error>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row mb-3\">\r\n                                <div class=\"col\">\r\n                                    <button mat-raised-button color=\"primary\" [disabled]=\"isSending\" class=\"float-end form-button\">Submit</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n\r\n                        <div *ngIf=\"showPrompt\" class=\"row p5 text-center\">\r\n                            <div class=\"col\">\r\n                                <img src=\"../../../../assets/images/forms/success.png\" class=\"mb-4 prompt-image mx-auto\">\r\n                                <p class=\"lead\">Successfully completed Restaurant registration</p>\r\n                                <a href=\"/home\">\r\n                                    <button mat-raised-button color=\"primary\" class=\"mt-3 mb-1 form-button\">Continue</button>\r\n                                </a>\r\n                                <p>continue to Restaurant</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <app-form-footer></app-form-footer>\r\n\r\n                    </mat-card-content>\r\n                </mat-card>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\nimport { AuthFormsModule } from 'projects/personal/src/app/components/auth-forms/auth-forms.module';\r\n\r\nimport { RegisterFormComponent } from './register-form/register-form.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    GooglePlaceModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    AuthFormsModule,\r\n  ],\r\n  exports: [\r\n    RegisterFormComponent,\r\n  ]\r\n})\r\nexport class RegisterFormsModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { RegisterPageComponent } from './register-page.component';\r\nimport { RegisterFormComponent } from '../../components/register-forms/register-form/register-form.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: RegisterPageComponent,\r\n    children: [\r\n      { path: \"\", component: RegisterFormComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegisterPageRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register-page',\r\n  templateUrl: './register-page.component.html',\r\n  styleUrls: ['./register-page.component.scss']\r\n})\r\nexport class RegisterPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-main-navbar\r\n    [navBrand]=\"'nR Restaurant'\"\r\n    [isForms]=\"true\"\r\n></app-main-navbar>\r\n\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RegisterPageRoutingModule } from './register-page-routing.module';\r\nimport { MainNavbarModule } from 'projects/application/src/app/components/main-navbar/main-navbar.module';\r\nimport { RegisterFormsModule } from '../../components/register-forms/register-forms.module';\r\n\r\nimport { RegisterPageComponent } from './register-page.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterPageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RegisterPageRoutingModule,\r\n    MainNavbarModule,\r\n    RegisterFormsModule\r\n  ]\r\n})\r\nexport class RegisterPageModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}